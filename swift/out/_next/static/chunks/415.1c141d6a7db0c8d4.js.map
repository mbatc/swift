{"version":3,"file":"static/chunks/415.1c141d6a7db0c8d4.js","mappings":"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","sources":["webpack://_N_E/../../react-swift/dist/CCapture-31e23e91.js","webpack://_N_E/../../react-swift/dist/_commonjsHelpers-1c8beb5f.js","webpack://_N_E/<anon>"],"sourcesContent":["import { c as commonjsGlobal } from './_commonjsHelpers-1c8beb5f.js';\n\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function (e) {\n    e && typeof e !== 'string' && !Array.isArray(e) && Object.keys(e).forEach(function (k) {\n      if (k !== 'default' && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n\nvar CCapture$2 = {exports: {}};\n\nvar tar = {exports: {}};\n\n(function (module) {\n  (function () {\n\n    var lookup = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/'];\n    function clean(length) {\n      var i,\n        buffer = new Uint8Array(length);\n      for (i = 0; i < length; i += 1) {\n        buffer[i] = 0;\n      }\n      return buffer;\n    }\n    function extend(orig, length, addLength, multipleOf) {\n      var newSize = length + addLength,\n        buffer = clean((parseInt(newSize / multipleOf) + 1) * multipleOf);\n      buffer.set(orig);\n      return buffer;\n    }\n    function pad(num, bytes, base) {\n      num = num.toString(base || 8);\n      return '000000000000'.substr(num.length + 12 - bytes) + num;\n    }\n    function stringToUint8(input, out, offset) {\n      var i, length;\n      out = out || clean(input.length);\n      offset = offset || 0;\n      for (i = 0, length = input.length; i < length; i += 1) {\n        out[offset] = input.charCodeAt(i);\n        offset += 1;\n      }\n      return out;\n    }\n    function uint8ToBase64(uint8) {\n      var i,\n        extraBytes = uint8.length % 3,\n        // if we have 1 byte left, pad 2 bytes\n        output = '',\n        temp,\n        length;\n      function tripletToBase64(num) {\n        return lookup[num >> 18 & 0x3f] + lookup[num >> 12 & 0x3f] + lookup[num >> 6 & 0x3f] + lookup[num & 0x3f];\n      }\n\n      // go through the array every three bytes, we'll deal with trailing stuff later\n      for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n        temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n        output += tripletToBase64(temp);\n      }\n\n      // this prevents an ERR_INVALID_URL in Chrome (Firefox okay)\n      switch (output.length % 4) {\n        case 1:\n          output += '=';\n          break;\n        case 2:\n          output += '==';\n          break;\n      }\n      return output;\n    }\n    window.utils = {};\n    window.utils.clean = clean;\n    window.utils.pad = pad;\n    window.utils.extend = extend;\n    window.utils.stringToUint8 = stringToUint8;\n    window.utils.uint8ToBase64 = uint8ToBase64;\n  })();\n  (function () {\n\n    /*\n    struct posix_header {             // byte offset\n    char name[100];               //   0\n    char mode[8];                 // 100\n    char uid[8];                  // 108\n    char gid[8];                  // 116\n    char size[12];                // 124\n    char mtime[12];               // 136\n    char chksum[8];               // 148\n    char typeflag;                // 156\n    char linkname[100];           // 157\n    char magic[6];                // 257\n    char version[2];              // 263\n    char uname[32];               // 265\n    char gname[32];               // 297\n    char devmajor[8];             // 329\n    char devminor[8];             // 337\n    char prefix[155];             // 345\n                                    // 500\n    };\n    */\n    var utils = window.utils,\n      headerFormat;\n    headerFormat = [{\n      field: 'fileName',\n      length: 100\n    }, {\n      field: 'fileMode',\n      length: 8\n    }, {\n      field: 'uid',\n      length: 8\n    }, {\n      field: 'gid',\n      length: 8\n    }, {\n      field: 'fileSize',\n      length: 12\n    }, {\n      field: 'mtime',\n      length: 12\n    }, {\n      field: 'checksum',\n      length: 8\n    }, {\n      field: 'type',\n      length: 1\n    }, {\n      field: 'linkName',\n      length: 100\n    }, {\n      field: 'ustar',\n      length: 8\n    }, {\n      field: 'owner',\n      length: 32\n    }, {\n      field: 'group',\n      length: 32\n    }, {\n      field: 'majorNumber',\n      length: 8\n    }, {\n      field: 'minorNumber',\n      length: 8\n    }, {\n      field: 'filenamePrefix',\n      length: 155\n    }, {\n      field: 'padding',\n      length: 12\n    }];\n    function formatHeader(data, cb) {\n      var buffer = utils.clean(512),\n        offset = 0;\n      headerFormat.forEach(function (value) {\n        var str = data[value.field] || '',\n          i,\n          length;\n        for (i = 0, length = str.length; i < length; i += 1) {\n          buffer[offset] = str.charCodeAt(i);\n          offset += 1;\n        }\n        offset += value.length - i; // space it out with nulls\n      });\n      if (typeof cb === 'function') {\n        return cb(buffer, offset);\n      }\n      return buffer;\n    }\n    window.header = {};\n    window.header.structure = headerFormat;\n    window.header.format = formatHeader;\n  })();\n  (function () {\n\n    var header = window.header,\n      utils = window.utils,\n      recordSize = 512,\n      blockSize;\n    function Tar(recordsPerBlock) {\n      this.written = 0;\n      blockSize = (recordsPerBlock || 20) * recordSize;\n      this.out = utils.clean(blockSize);\n      this.blocks = [];\n      this.length = 0;\n    }\n    Tar.prototype.append = function (filepath, input, opts, callback) {\n      var data, checksum, mode, mtime, uid, gid, headerArr;\n      if (typeof input === 'string') {\n        input = utils.stringToUint8(input);\n      } else if (input.constructor !== Uint8Array.prototype.constructor) {\n        throw 'Invalid input type. You gave me: ' + input.constructor.toString().match(/function\\s*([$A-Za-z_][0-9A-Za-z_]*)\\s*\\(/)[1];\n      }\n      if (typeof opts === 'function') {\n        opts = {};\n      }\n      opts = opts || {};\n      mode = opts.mode || parseInt('777', 8) & 0xfff;\n      mtime = opts.mtime || Math.floor(+new Date() / 1000);\n      uid = opts.uid || 0;\n      gid = opts.gid || 0;\n      data = {\n        fileName: filepath,\n        fileMode: utils.pad(mode, 7),\n        uid: utils.pad(uid, 7),\n        gid: utils.pad(gid, 7),\n        fileSize: utils.pad(input.length, 11),\n        mtime: utils.pad(mtime, 11),\n        checksum: '        ',\n        type: '0',\n        // just a file\n        ustar: 'ustar  ',\n        owner: opts.owner || '',\n        group: opts.group || ''\n      };\n\n      // calculate the checksum\n      checksum = 0;\n      Object.keys(data).forEach(function (key) {\n        var i,\n          value = data[key],\n          length;\n        for (i = 0, length = value.length; i < length; i += 1) {\n          checksum += value.charCodeAt(i);\n        }\n      });\n      data.checksum = utils.pad(checksum, 6) + '\\u0000 ';\n      headerArr = header.format(data);\n      var headerLength = Math.ceil(headerArr.length / recordSize) * recordSize;\n      var inputLength = Math.ceil(input.length / recordSize) * recordSize;\n      this.blocks.push({\n        header: headerArr,\n        input: input,\n        headerLength: headerLength,\n        inputLength: inputLength\n      });\n    };\n    Tar.prototype.save = function () {\n      var buffers = [];\n      var chunks = [];\n      var length = 0;\n      var max = Math.pow(2, 20);\n      var chunk = [];\n      this.blocks.forEach(function (b) {\n        if (length + b.headerLength + b.inputLength > max) {\n          chunks.push({\n            blocks: chunk,\n            length: length\n          });\n          chunk = [];\n          length = 0;\n        }\n        chunk.push(b);\n        length += b.headerLength + b.inputLength;\n      });\n      chunks.push({\n        blocks: chunk,\n        length: length\n      });\n      chunks.forEach(function (c) {\n        var buffer = new Uint8Array(c.length);\n        var written = 0;\n        c.blocks.forEach(function (b) {\n          buffer.set(b.header, written);\n          written += b.headerLength;\n          buffer.set(b.input, written);\n          written += b.inputLength;\n        });\n        buffers.push(buffer);\n      });\n      buffers.push(new Uint8Array(2 * recordSize));\n      return new Blob(buffers, {\n        type: 'octet/stream'\n      });\n    };\n    Tar.prototype.clear = function () {\n      this.written = 0;\n      this.out = utils.clean(blockSize);\n    };\n    {\n      module.exports = Tar;\n    }\n  })();\n})(tar);\n\nvar download = {exports: {}};\n\n(function (module, exports) {\n  (function (root, factory) {\n    {\n      // Node. Does not work with strict CommonJS, but\n      // only CommonJS-like environments that support module.exports,\n      // like Node.\n      module.exports = factory();\n    }\n  })(commonjsGlobal, function () {\n    return function download(data, strFileName, strMimeType) {\n      var self = window,\n        // this script is only for browsers anyway...\n        defaultMime = 'application/octet-stream',\n        // this default mime also triggers iframe downloads\n        mimeType = strMimeType || defaultMime,\n        payload = data,\n        url = !strFileName && !strMimeType && payload,\n        anchor = document.createElement('a'),\n        toString = function (a) {\n          return String(a);\n        },\n        myBlob = self.Blob || self.MozBlob || self.WebKitBlob || toString,\n        fileName = strFileName || 'download',\n        blob,\n        reader;\n      myBlob = myBlob.call ? myBlob.bind(self) : Blob;\n      if (String(this) === 'true') {\n        //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n        payload = [payload, mimeType];\n        mimeType = payload[0];\n        payload = payload[1];\n      }\n      if (url && url.length < 2048) {\n        // if no filename and no mime, assume a url was passed as the only argument\n        fileName = url.split('/').pop().split('?')[0];\n        anchor.href = url; // assign href prop to temp anchor\n        if (anchor.href.indexOf(url) !== -1) {\n          // if the browser determines that it's a potentially valid url path:\n          var ajax = new XMLHttpRequest();\n          ajax.open('GET', url, true);\n          ajax.responseType = 'blob';\n          ajax.onload = function (e) {\n            download(e.target.response, fileName, defaultMime);\n          };\n          setTimeout(function () {\n            ajax.send();\n          }, 0); // allows setting custom ajax headers using the return:\n          return ajax;\n        } // end if valid url?\n      } // end if url?\n\n      //go ahead and download dataURLs right away\n      if (/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)) {\n        if (payload.length > 1024 * 1024 * 1.999 && myBlob !== toString) {\n          payload = dataUrlToBlob(payload);\n          mimeType = payload.type || defaultMime;\n        } else {\n          return navigator.msSaveBlob // IE10 can't do a[download], only Blobs:\n          ? navigator.msSaveBlob(dataUrlToBlob(payload), fileName) : saver(payload); // everyone else can save dataURLs un-processed\n        }\n      } else {\n        //not data url, is it a string with special needs?\n        if (/([\\x80-\\xff])/.test(payload)) {\n          var i = 0,\n            tempUiArr = new Uint8Array(payload.length),\n            mx = tempUiArr.length;\n          for (i; i < mx; ++i) tempUiArr[i] = payload.charCodeAt(i);\n          payload = new myBlob([tempUiArr], {\n            type: mimeType\n          });\n        }\n      }\n      blob = payload instanceof myBlob ? payload : new myBlob([payload], {\n        type: mimeType\n      });\n      function dataUrlToBlob(strUrl) {\n        var parts = strUrl.split(/[:;,]/),\n          type = parts[1],\n          indexDecoder = strUrl.indexOf('charset') > 0 ? 3 : 2,\n          decoder = parts[indexDecoder] == 'base64' ? atob : decodeURIComponent,\n          binData = decoder(parts.pop()),\n          mx = binData.length,\n          i = 0,\n          uiArr = new Uint8Array(mx);\n        for (i; i < mx; ++i) uiArr[i] = binData.charCodeAt(i);\n        return new myBlob([uiArr], {\n          type: type\n        });\n      }\n      function saver(url, winMode) {\n        if ('download' in anchor) {\n          //html5 A[download]\n          anchor.href = url;\n          anchor.setAttribute('download', fileName);\n          anchor.className = 'download-js-link';\n          anchor.innerHTML = 'downloading...';\n          anchor.style.display = 'none';\n          anchor.addEventListener('click', function (e) {\n            e.stopPropagation();\n            this.removeEventListener('click', arguments.callee);\n          });\n          document.body.appendChild(anchor);\n          setTimeout(function () {\n            anchor.click();\n            document.body.removeChild(anchor);\n            if (winMode === true) {\n              setTimeout(function () {\n                self.URL.revokeObjectURL(anchor.href);\n              }, 250);\n            }\n          }, 66);\n          return true;\n        }\n\n        // handle non-a[download] safari as best we can:\n        if (/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n          if (/^data:/.test(url)) url = 'data:' + url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n          if (!window.open(url)) {\n            // popup blocked, offer direct download:\n            if (confirm('Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.')) {\n              location.href = url;\n            }\n          }\n          return true;\n        }\n\n        //do iframe dataURL download (old ch+FF):\n        var f = document.createElement('iframe');\n        document.body.appendChild(f);\n        if (!winMode && /^data:/.test(url)) {\n          // force a mime that will download:\n          url = 'data:' + url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n        }\n        f.src = url;\n        setTimeout(function () {\n          document.body.removeChild(f);\n        }, 333);\n      } //end saver\n\n      if (navigator.msSaveBlob) {\n        // IE10+ : (has Blob, but not a[download] or URL)\n        return navigator.msSaveBlob(blob, fileName);\n      }\n      if (self.URL) {\n        // simple fast and modern way using Blob and URL:\n        saver(self.URL.createObjectURL(blob), true);\n      } else {\n        // handle non-Blob()+non-URL browsers:\n        if (typeof blob === 'string' || blob.constructor === toString) {\n          try {\n            return saver('data:' + mimeType + ';base64,' + self.btoa(blob));\n          } catch (y) {\n            return saver('data:' + mimeType + ',' + encodeURIComponent(blob));\n          }\n        }\n\n        // Blob but not URL support:\n        reader = new FileReader();\n        reader.onload = function (e) {\n          saver(this.result);\n        };\n        reader.readAsDataURL(blob);\n      }\n      return true;\n    }; /* end download() */\n  });\n})(download);\n\n(function (c) {\n  function a(b, d) {\n    if ({}.hasOwnProperty.call(a.cache, b)) return a.cache[b];\n    var e = a.resolve(b);\n    if (!e) throw new Error('Failed to resolve module ' + b);\n    var c = {\n      id: b,\n      require: a,\n      filename: b,\n      exports: {},\n      loaded: !1,\n      parent: d,\n      children: []\n    };\n    d && d.children.push(c);\n    var f = b.slice(0, b.lastIndexOf('/') + 1);\n    return a.cache[b] = c.exports, e.call(c.exports, c, c.exports, f, b), c.loaded = !0, a.cache[b] = c.exports;\n  }\n  a.modules = {}, a.cache = {}, a.resolve = function (b) {\n    return {}.hasOwnProperty.call(a.modules, b) ? a.modules[b] : void 0;\n  }, a.define = function (b, c) {\n    a.modules[b] = c;\n  };\n  var b = function (a) {\n    return a = '/', {\n      title: 'browser',\n      version: 'v0.10.26',\n      browser: !0,\n      env: {},\n      argv: [],\n      nextTick: c.setImmediate || function (a) {\n        setTimeout(a, 0);\n      },\n      cwd: function () {\n        return a;\n      },\n      chdir: function (b) {\n        a = b;\n      }\n    };\n  }();\n  a.define('/gif.coffee', function (d, m, l, k) {\n    function g(a, b) {\n      return {}.hasOwnProperty.call(a, b);\n    }\n    function j(d, b) {\n      for (var a = 0, c = b.length; a < c; ++a) if (a in b && b[a] === d) return !0;\n      return !1;\n    }\n    function i(a, b) {\n      function d() {\n        this.constructor = a;\n      }\n      for (var c in b) g(b, c) && (a[c] = b[c]);\n      return d.prototype = b.prototype, a.prototype = new d(), a.__super__ = b.prototype, a;\n    }\n    var h, c, f, b, e;\n    f = a('events', d).EventEmitter, h = a('/browser.coffee', d), e = function (d) {\n      function a(d) {\n        var a, b;\n        this.running = !1, this.options = {}, this.frames = [], this.freeWorkers = [], this.activeWorkers = [], this.setOptions(d);\n        for (a in c) b = c[a], null != this.options[a] ? this.options[a] : this.options[a] = b;\n      }\n      return i(a, d), c = {\n        workerScript: 'gif.worker.js',\n        workers: 2,\n        repeat: 0,\n        background: '#fff',\n        quality: 10,\n        width: null,\n        height: null,\n        transparent: null\n      }, b = {\n        delay: 500,\n        copy: !1\n      }, a.prototype.setOption = function (a, b) {\n        return this.options[a] = b, null != this._canvas && (a === 'width' || a === 'height') ? this._canvas[a] = b : void 0;\n      }, a.prototype.setOptions = function (b) {\n        var a, c;\n        return function (d) {\n          for (a in b) {\n            if (!g(b, a)) continue;\n            c = b[a], d.push(this.setOption(a, c));\n          }\n          return d;\n        }.call(this, []);\n      }, a.prototype.addFrame = function (a, d) {\n        var c, e;\n        null == d && (d = {}), c = {}, c.transparent = this.options.transparent;\n        for (e in b) c[e] = d[e] || b[e];\n        if (null != this.options.width || this.setOption('width', a.width), null != this.options.height || this.setOption('height', a.height), 'undefined' !== typeof ImageData && null != ImageData && a instanceof ImageData) c.data = a.data;else if ('undefined' !== typeof CanvasRenderingContext2D && null != CanvasRenderingContext2D && a instanceof CanvasRenderingContext2D || 'undefined' !== typeof WebGLRenderingContext && null != WebGLRenderingContext && a instanceof WebGLRenderingContext) d.copy ? c.data = this.getContextData(a) : c.context = a;else if (null != a.childNodes) d.copy ? c.data = this.getImageData(a) : c.image = a;else throw new Error('Invalid image');\n        return this.frames.push(c);\n      }, a.prototype.render = function () {\n        var a;\n        if (this.running) throw new Error('Already running');\n        if (!(null != this.options.width && null != this.options.height)) throw new Error('Width and height must be set prior to rendering');\n        this.running = !0, this.nextFrame = 0, this.finishedFrames = 0, this.imageParts = function (c) {\n          for (var b = function () {\n              var b;\n              b = [];\n              for (var a = 0; 0 <= this.frames.length ? a < this.frames.length : a > this.frames.length; 0 <= this.frames.length ? ++a : --a) b.push(a);\n              return b;\n            }.apply(this, arguments), a = 0, e = b.length; a < e; ++a) b[a], c.push(null);\n          return c;\n        }.call(this, []), a = this.spawnWorkers();\n        for (var c = function () {\n            var c;\n            c = [];\n            for (var b = 0; 0 <= a ? b < a : b > a; 0 <= a ? ++b : --b) c.push(b);\n            return c;\n          }.apply(this, arguments), b = 0, e = c.length; b < e; ++b) c[b], this.renderNextFrame();\n        return this.emit('start'), this.emit('progress', 0);\n      }, a.prototype.abort = function () {\n        var a;\n        while (!0) {\n          if (a = this.activeWorkers.shift(), !(null != a)) break;\n          console.log('killing active worker'), a.terminate();\n        }\n        return this.running = !1, this.emit('abort');\n      }, a.prototype.spawnWorkers = function () {\n        var a;\n        return a = Math.min(this.options.workers, this.frames.length), function () {\n          var c;\n          c = [];\n          for (var b = this.freeWorkers.length; this.freeWorkers.length <= a ? b < a : b > a; this.freeWorkers.length <= a ? ++b : --b) c.push(b);\n          return c;\n        }.apply(this, arguments).forEach(function (a) {\n          return function (c) {\n            var b;\n            return console.log('spawning worker ' + c), b = new Worker(a.options.workerScript), b.onmessage = function (a) {\n              return function (c) {\n                return a.activeWorkers.splice(a.activeWorkers.indexOf(b), 1), a.freeWorkers.push(b), a.frameFinished(c.data);\n              };\n            }(a), a.freeWorkers.push(b);\n          };\n        }(this)), a;\n      }, a.prototype.frameFinished = function (a) {\n        return console.log('frame ' + a.index + ' finished - ' + this.activeWorkers.length + ' active'), this.finishedFrames++, this.emit('progress', this.finishedFrames / this.frames.length), this.imageParts[a.index] = a, j(null, this.imageParts) ? this.renderNextFrame() : this.finishRendering();\n      }, a.prototype.finishRendering = function () {\n        var e, a, k, m, b, d, h;\n        b = 0;\n        for (var f = 0, j = this.imageParts.length; f < j; ++f) a = this.imageParts[f], b += (a.data.length - 1) * a.pageSize + a.cursor;\n        b += a.pageSize - a.cursor, console.log('rendering finished - filesize ' + Math.round(b / 1e3) + 'kb'), e = new Uint8Array(b), d = 0;\n        for (var g = 0, l = this.imageParts.length; g < l; ++g) {\n          a = this.imageParts[g];\n          for (var c = 0, i = a.data.length; c < i; ++c) h = a.data[c], k = c, e.set(h, d), k === a.data.length - 1 ? d += a.cursor : d += a.pageSize;\n        }\n        return m = new Blob([e], {\n          type: 'image/gif'\n        }), this.emit('finished', m, e);\n      }, a.prototype.renderNextFrame = function () {\n        var c, a, b;\n        if (this.freeWorkers.length === 0) throw new Error('No free workers');\n        return this.nextFrame >= this.frames.length ? void 0 : (c = this.frames[this.nextFrame++], b = this.freeWorkers.shift(), a = this.getTask(c), console.log('starting frame ' + (a.index + 1) + ' of ' + this.frames.length), this.activeWorkers.push(b), b.postMessage(a));\n      }, a.prototype.getContextData = function (a) {\n        return a.getImageData(0, 0, this.options.width, this.options.height).data;\n      }, a.prototype.getImageData = function (b) {\n        var a;\n        return null != this._canvas || (this._canvas = document.createElement('canvas'), this._canvas.width = this.options.width, this._canvas.height = this.options.height), a = this._canvas.getContext('2d'), a.setFill = this.options.background, a.fillRect(0, 0, this.options.width, this.options.height), a.drawImage(b, 0, 0), this.getContextData(a);\n      }, a.prototype.getTask = function (a) {\n        var c, b;\n        if (c = this.frames.indexOf(a), b = {\n          index: c,\n          last: c === this.frames.length - 1,\n          delay: a.delay,\n          transparent: a.transparent,\n          width: this.options.width,\n          height: this.options.height,\n          quality: this.options.quality,\n          repeat: this.options.repeat,\n          canTransfer: h.name === 'chrome'\n        }, null != a.data) b.data = a.data;else if (null != a.context) b.data = this.getContextData(a.context);else if (null != a.image) b.data = this.getImageData(a.image);else throw new Error('Invalid frame');\n        return b;\n      }, a;\n    }(f), d.exports = e;\n  }), a.define('/browser.coffee', function (f, g, h, i) {\n    var a, d, e, c, b;\n    c = navigator.userAgent.toLowerCase(), e = navigator.platform.toLowerCase(), b = c.match(/(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/) || [null, 'unknown', 0], d = b[1] === 'ie' && document.documentMode, a = {\n      name: b[1] === 'version' ? b[3] : b[1],\n      version: d || parseFloat(b[1] === 'opera' && b[4] ? b[4] : b[2]),\n      platform: {\n        name: c.match(/ip(?:ad|od|hone)/) ? 'ios' : (c.match(/(?:webos|android)/) || e.match(/mac|win|linux/) || ['other'])[0]\n      }\n    }, a[a.name] = !0, a[a.name + parseInt(a.version, 10)] = !0, a.platform[a.platform.name] = !0, f.exports = a;\n  }), a.define('events', function (f, e, g, h) {\n    b.EventEmitter || (b.EventEmitter = function () {});\n    var a = e.EventEmitter = b.EventEmitter,\n      c = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n        return Object.prototype.toString.call(a) === '[object Array]';\n      },\n      d = 10;\n    a.prototype.setMaxListeners = function (a) {\n      this._events || (this._events = {}), this._events.maxListeners = a;\n    }, a.prototype.emit = function (f) {\n      if (f === 'error' && (!(this._events && this._events.error) || c(this._events.error) && !this._events.error.length)) throw arguments[1] instanceof Error ? arguments[1] : new Error(\"Uncaught, unspecified 'error' event.\");\n      if (!this._events) return !1;\n      var a = this._events[f];\n      if (!a) return !1;\n      if (!(typeof a == 'function')) if (c(a)) {\n        var b = Array.prototype.slice.call(arguments, 1),\n          e = a.slice();\n        for (var d = 0, g = e.length; d < g; d++) e[d].apply(this, b);\n        return !0;\n      } else return !1;\n      switch (arguments.length) {\n        case 1:\n          a.call(this);\n          break;\n        case 2:\n          a.call(this, arguments[1]);\n          break;\n        case 3:\n          a.call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          var b = Array.prototype.slice.call(arguments, 1);\n          a.apply(this, b);\n      }\n      return !0;\n    }, a.prototype.addListener = function (a, b) {\n      if ('function' !== typeof b) throw new Error('addListener only takes instances of Function');\n      if (this._events || (this._events = {}), this.emit('newListener', a, b), !this._events[a]) this._events[a] = b;else if (c(this._events[a])) {\n        if (!this._events[a].warned) {\n          var e;\n          this._events.maxListeners !== undefined ? e = this._events.maxListeners : e = d, e && e > 0 && this._events[a].length > e && (this._events[a].warned = !0, console.error('(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.', this._events[a].length), console.trace());\n        }\n        this._events[a].push(b);\n      } else this._events[a] = [this._events[a], b];\n      return this;\n    }, a.prototype.on = a.prototype.addListener, a.prototype.once = function (b, c) {\n      var a = this;\n      return a.on(b, function d() {\n        a.removeListener(b, d), c.apply(this, arguments);\n      }), this;\n    }, a.prototype.removeListener = function (a, d) {\n      if ('function' !== typeof d) throw new Error('removeListener only takes instances of Function');\n      if (!(this._events && this._events[a])) return this;\n      var b = this._events[a];\n      if (c(b)) {\n        var e = b.indexOf(d);\n        if (e < 0) return this;\n        b.splice(e, 1), b.length == 0 && delete this._events[a];\n      } else this._events[a] === d && delete this._events[a];\n      return this;\n    }, a.prototype.removeAllListeners = function (a) {\n      return a && this._events && this._events[a] && (this._events[a] = null), this;\n    }, a.prototype.listeners = function (a) {\n      return this._events || (this._events = {}), this._events[a] || (this._events[a] = []), c(this._events[a]) || (this._events[a] = [this._events[a]]), this._events[a];\n    };\n  }), c.GIF = a('/gif.coffee');\n}).call(commonjsGlobal, commonjsGlobal);\n\nvar webmWriter0_2_0 = {exports: {}};\n\n/**\n * A tool for presenting an ArrayBuffer as a stream for writing some simple data types.\n *\n * By Nicholas Sherlock\n *\n * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n */\n(function (module) {\n\n  (function () {\n    var isNodeEnviroment = 'object' !== 'undefined';\n    var isNodeEnviroment = false;\n\n    /**\n     * Create an ArrayBuffer of the given length and present it as a writable stream with methods\n     * for writing data in different formats.\n     */\n\n    var ArrayBufferDataStream = function (length) {\n      this.data = new Uint8Array(length);\n      this.pos = 0;\n    };\n    ArrayBufferDataStream.prototype.seek = function (offset) {\n      this.pos = offset;\n    };\n    ArrayBufferDataStream.prototype.writeBytes = function (arr) {\n      for (var i = 0; i < arr.length; i++) {\n        this.data[this.pos++] = arr[i];\n      }\n    };\n    ArrayBufferDataStream.prototype.writeByte = function (b) {\n      this.data[this.pos++] = b;\n    };\n\n    //Synonym:\n    ArrayBufferDataStream.prototype.writeU8 = ArrayBufferDataStream.prototype.writeByte;\n    ArrayBufferDataStream.prototype.writeU16BE = function (u) {\n      this.data[this.pos++] = u >> 8;\n      this.data[this.pos++] = u;\n    };\n    ArrayBufferDataStream.prototype.writeDoubleBE = function (d) {\n      var bytes = new Uint8Array(new Float64Array([d]).buffer);\n      for (var i = bytes.length - 1; i >= 0; i--) {\n        this.writeByte(bytes[i]);\n      }\n    };\n    ArrayBufferDataStream.prototype.writeFloatBE = function (d) {\n      var bytes = new Uint8Array(new Float32Array([d]).buffer);\n      for (var i = bytes.length - 1; i >= 0; i--) {\n        this.writeByte(bytes[i]);\n      }\n    };\n\n    /**\n     * Write an ASCII string to the stream\n     */\n    ArrayBufferDataStream.prototype.writeString = function (s) {\n      for (var i = 0; i < s.length; i++) {\n        this.data[this.pos++] = s.charCodeAt(i);\n      }\n    };\n\n    /**\n     * Write the given 32-bit integer to the stream as an EBML variable-length integer using the given byte width\n     * (use measureEBMLVarInt).\n     *\n     * No error checking is performed to ensure that the supplied width is correct for the integer.\n     *\n     * @param i Integer to be written\n     * @param width Number of bytes to write to the stream\n     */\n    ArrayBufferDataStream.prototype.writeEBMLVarIntWidth = function (i, width) {\n      switch (width) {\n        case 1:\n          this.writeU8(1 << 7 | i);\n          break;\n        case 2:\n          this.writeU8(1 << 6 | i >> 8);\n          this.writeU8(i);\n          break;\n        case 3:\n          this.writeU8(1 << 5 | i >> 16);\n          this.writeU8(i >> 8);\n          this.writeU8(i);\n          break;\n        case 4:\n          this.writeU8(1 << 4 | i >> 24);\n          this.writeU8(i >> 16);\n          this.writeU8(i >> 8);\n          this.writeU8(i);\n          break;\n        case 5:\n          /*\n           * JavaScript converts its doubles to 32-bit integers for bitwise operations, so we need to do a\n           * division by 2^32 instead of a right-shift of 32 to retain those top 3 bits\n           */\n          this.writeU8(1 << 3 | i / 4294967296 & 0x7);\n          this.writeU8(i >> 24);\n          this.writeU8(i >> 16);\n          this.writeU8(i >> 8);\n          this.writeU8(i);\n          break;\n        default:\n          throw new RuntimeException('Bad EBML VINT size ' + width);\n      }\n    };\n\n    /**\n     * Return the number of bytes needed to encode the given integer as an EBML VINT.\n     */\n    ArrayBufferDataStream.prototype.measureEBMLVarInt = function (val) {\n      if (val < (1 << 7) - 1) {\n        /* Top bit is set, leaving 7 bits to hold the integer, but we can't store 127 because\n         * \"all bits set to one\" is a reserved value. Same thing for the other cases below:\n         */\n        return 1;\n      } else if (val < (1 << 14) - 1) {\n        return 2;\n      } else if (val < (1 << 21) - 1) {\n        return 3;\n      } else if (val < (1 << 28) - 1) {\n        return 4;\n      } else if (val < 34359738367) {\n        // 2 ^ 35 - 1 (can address 32GB)\n        return 5;\n      } else {\n        throw new RuntimeException('EBML VINT size not supported ' + val);\n      }\n    };\n    ArrayBufferDataStream.prototype.writeEBMLVarInt = function (i) {\n      this.writeEBMLVarIntWidth(i, this.measureEBMLVarInt(i));\n    };\n\n    /**\n     * Write the given unsigned 32-bit integer to the stream in big-endian order using the given byte width.\n     * No error checking is performed to ensure that the supplied width is correct for the integer.\n     *\n     * Omit the width parameter to have it determined automatically for you.\n     *\n     * @param u Unsigned integer to be written\n     * @param width Number of bytes to write to the stream\n     */\n    ArrayBufferDataStream.prototype.writeUnsignedIntBE = function (u, width) {\n      if (width === undefined) {\n        width = this.measureUnsignedInt(u);\n      }\n\n      // Each case falls through:\n      switch (width) {\n        case 5:\n          this.writeU8(Math.floor(u / 4294967296));\n        // Need to use division to access >32 bits of floating point var\n        case 4:\n          this.writeU8(u >> 24);\n        case 3:\n          this.writeU8(u >> 16);\n        case 2:\n          this.writeU8(u >> 8);\n        case 1:\n          this.writeU8(u);\n          break;\n        default:\n          throw new RuntimeException('Bad UINT size ' + width);\n      }\n    };\n\n    /**\n     * Return the number of bytes needed to hold the non-zero bits of the given unsigned integer.\n     */\n    ArrayBufferDataStream.prototype.measureUnsignedInt = function (val) {\n      // Force to 32-bit unsigned integer\n      if (val < 1 << 8) {\n        return 1;\n      } else if (val < 1 << 16) {\n        return 2;\n      } else if (val < 1 << 24) {\n        return 3;\n      } else if (val < 4294967296) {\n        return 4;\n      } else {\n        return 5;\n      }\n    };\n\n    /**\n     * Return a view on the portion of the buffer from the beginning to the current seek position as a Uint8Array.\n     */\n    ArrayBufferDataStream.prototype.getAsDataArray = function () {\n      if (this.pos < this.data.byteLength) {\n        return this.data.subarray(0, this.pos);\n      } else if (this.pos == this.data.byteLength) {\n        return this.data;\n      } else {\n        throw \"ArrayBufferDataStream's pos lies beyond end of buffer\";\n      }\n    };\n    window.ArrayBufferDataStream = ArrayBufferDataStream;\n\n    /**\n     * Allows a series of Blob-convertible objects (ArrayBuffer, Blob, String, etc) to be added to a buffer. Seeking and\n     * overwriting of blobs is allowed.\n     *\n     * You can supply a FileWriter, in which case the BlobBuffer is just used as temporary storage before it writes it\n     * through to the disk.\n     *\n     * By Nicholas Sherlock\n     *\n     * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n     */\n\n    var BlobBuffer = function (fs) {\n      return function (destination) {\n        var buffer = [],\n          writePromise = Promise.resolve(),\n          fileWriter = null,\n          fd = null;\n        if (typeof FileWriter !== 'undefined' && destination instanceof FileWriter) {\n          fileWriter = destination;\n        } else if (fs && destination) {\n          fd = destination;\n        }\n\n        // Current seek offset\n        this.pos = 0;\n\n        // One more than the index of the highest byte ever written\n        this.length = 0;\n\n        // Returns a promise that converts the blob to an ArrayBuffer\n        function readBlobAsBuffer(blob) {\n          return new Promise(function (resolve, reject) {\n            var reader = new FileReader();\n            reader.addEventListener('loadend', function () {\n              resolve(reader.result);\n            });\n            reader.readAsArrayBuffer(blob);\n          });\n        }\n        function convertToUint8Array(thing) {\n          return new Promise(function (resolve, reject) {\n            if (thing instanceof Uint8Array) {\n              resolve(thing);\n            } else if (thing instanceof ArrayBuffer || ArrayBuffer.isView(thing)) {\n              resolve(new Uint8Array(thing));\n            } else if (thing instanceof Blob) {\n              resolve(readBlobAsBuffer(thing).then(function (buffer) {\n                return new Uint8Array(buffer);\n              }));\n            } else {\n              //Assume that Blob will know how to read this thing\n              resolve(readBlobAsBuffer(new Blob([thing])).then(function (buffer) {\n                return new Uint8Array(buffer);\n              }));\n            }\n          });\n        }\n        function measureData(data) {\n          var result = data.byteLength || data.length || data.size;\n          if (!Number.isInteger(result)) {\n            throw 'Failed to determine size of element';\n          }\n          return result;\n        }\n\n        /**\n         * Seek to the given absolute offset.\n         *\n         * You may not seek beyond the end of the file (this would create a hole and/or allow blocks to be written in non-\n         * sequential order, which isn't currently supported by the memory buffer backend).\n         */\n        this.seek = function (offset) {\n          if (offset < 0) {\n            throw 'Offset may not be negative';\n          }\n          if (isNaN(offset)) {\n            throw 'Offset may not be NaN';\n          }\n          if (offset > this.length) {\n            throw 'Seeking beyond the end of file is not allowed';\n          }\n          this.pos = offset;\n        };\n\n        /**\n         * Write the Blob-convertible data to the buffer at the current seek position.\n         *\n         * Note: If overwriting existing data, the write must not cross preexisting block boundaries (written data must\n         * be fully contained by the extent of a previous write).\n         */\n        this.write = function (data) {\n          var newEntry = {\n              offset: this.pos,\n              data: data,\n              length: measureData(data)\n            },\n            isAppend = newEntry.offset >= this.length;\n          this.pos += newEntry.length;\n          this.length = Math.max(this.length, this.pos);\n\n          // After previous writes complete, perform our write\n          writePromise = writePromise.then(function () {\n            if (fd) {\n              return new Promise(function (resolve, reject) {\n                convertToUint8Array(newEntry.data).then(function (dataArray) {\n                  var totalWritten = 0,\n                    buffer = Buffer.from(dataArray.buffer),\n                    handleWriteComplete = function (err, written, buffer) {\n                      totalWritten += written;\n                      if (totalWritten >= buffer.length) {\n                        resolve();\n                      } else {\n                        // We still have more to write...\n                        fs.write(fd, buffer, totalWritten, buffer.length - totalWritten, newEntry.offset + totalWritten, handleWriteComplete);\n                      }\n                    };\n                  fs.write(fd, buffer, 0, buffer.length, newEntry.offset, handleWriteComplete);\n                });\n              });\n            } else if (fileWriter) {\n              return new Promise(function (resolve, reject) {\n                fileWriter.onwriteend = resolve;\n                fileWriter.seek(newEntry.offset);\n                fileWriter.write(new Blob([newEntry.data]));\n              });\n            } else if (!isAppend) {\n              // We might be modifying a write that was already buffered in memory.\n\n              // Slow linear search to find a block we might be overwriting\n              for (var i = 0; i < buffer.length; i++) {\n                var entry = buffer[i];\n\n                // If our new entry overlaps the old one in any way...\n                if (!(newEntry.offset + newEntry.length <= entry.offset || newEntry.offset >= entry.offset + entry.length)) {\n                  if (newEntry.offset < entry.offset || newEntry.offset + newEntry.length > entry.offset + entry.length) {\n                    throw new Error('Overwrite crosses blob boundaries');\n                  }\n                  if (newEntry.offset == entry.offset && newEntry.length == entry.length) {\n                    // We overwrote the entire block\n                    entry.data = newEntry.data;\n\n                    // We're done\n                    return;\n                  } else {\n                    return convertToUint8Array(entry.data).then(function (entryArray) {\n                      entry.data = entryArray;\n                      return convertToUint8Array(newEntry.data);\n                    }).then(function (newEntryArray) {\n                      newEntry.data = newEntryArray;\n                      entry.data.set(newEntry.data, newEntry.offset - entry.offset);\n                    });\n                  }\n                }\n              }\n              // Else fall through to do a simple append, as we didn't overwrite any pre-existing blocks\n            }\n            buffer.push(newEntry);\n          });\n        };\n\n        /**\n         * Finish all writes to the buffer, returning a promise that signals when that is complete.\n         *\n         * If a FileWriter was not provided, the promise is resolved with a Blob that represents the completed BlobBuffer\n         * contents. You can optionally pass in a mimeType to be used for this blob.\n         *\n         * If a FileWriter was provided, the promise is resolved with null as the first argument.\n         */\n        this.complete = function (mimeType) {\n          if (fd || fileWriter) {\n            writePromise = writePromise.then(function () {\n              return null;\n            });\n          } else {\n            // After writes complete we need to merge the buffer to give to the caller\n            writePromise = writePromise.then(function () {\n              var result = [];\n              for (var i = 0; i < buffer.length; i++) {\n                result.push(buffer[i].data);\n              }\n              return new Blob(result, {\n                mimeType: mimeType\n              });\n            });\n          }\n          return writePromise;\n        };\n      };\n    }(isNodeEnviroment ? null : null);\n    window.BlobBuffer = BlobBuffer;\n\n    /**\n     * WebM video encoder for Google Chrome. This implementation is suitable for creating very large video files, because\n     * it can stream Blobs directly to a FileWriter without buffering the entire video in memory.\n     *\n     * When FileWriter is not available or not desired, it can buffer the video in memory as a series of Blobs which are\n     * eventually returned as one composite Blob.\n     *\n     * By Nicholas Sherlock.\n     *\n     * Based on the ideas from Whammy: https://github.com/antimatter15/whammy\n     *\n     * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n     */\n\n    var WebMWriter = function (ArrayBufferDataStream, BlobBuffer) {\n      function extend(base, top) {\n        var target = {};\n        [base, top].forEach(function (obj) {\n          for (var prop in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n              target[prop] = obj[prop];\n            }\n          }\n        });\n        return target;\n      }\n\n      /**\n       * Decode a Base64 data URL into a binary string.\n       *\n       * Returns the binary string, or false if the URL could not be decoded.\n       */\n      function decodeBase64WebPDataURL(url) {\n        if (typeof url !== 'string' || !url.match(/^data:image\\/webp;base64,/i)) {\n          return false;\n        }\n        return window.atob(url.substring('data:image/webp;base64,'.length));\n      }\n\n      /**\n       * Convert the given canvas to a WebP encoded image and return the image data as a string.\n       */\n      function renderAsWebP(canvas, quality) {\n        var frame = canvas.toDataURL('image/webp', {\n          quality: quality\n        });\n        return decodeBase64WebPDataURL(frame);\n      }\n      function extractKeyframeFromWebP(webP) {\n        // Assume that Chrome will generate a Simple Lossy WebP which has this header:\n        var keyframeStartIndex = webP.indexOf('VP8 ');\n        if (keyframeStartIndex == -1) {\n          throw 'Failed to identify beginning of keyframe in WebP image';\n        }\n\n        // Skip the header and the 4 bytes that encode the length of the VP8 chunk\n        keyframeStartIndex += 'VP8 '.length + 4;\n        return webP.substring(keyframeStartIndex);\n      }\n\n      // Just a little utility so we can tag values as floats for the EBML encoder's benefit\n      function EBMLFloat32(value) {\n        this.value = value;\n      }\n      function EBMLFloat64(value) {\n        this.value = value;\n      }\n\n      /**\n       * Write the given EBML object to the provided ArrayBufferStream.\n       *\n       * The buffer's first byte is at bufferFileOffset inside the video file. This is used to complete offset and\n       * dataOffset fields in each EBML structure, indicating the file offset of the first byte of the EBML element and\n       * its data payload.\n       */\n      function writeEBML(buffer, bufferFileOffset, ebml) {\n        // Is the ebml an array of sibling elements?\n        if (Array.isArray(ebml)) {\n          for (var i = 0; i < ebml.length; i++) {\n            writeEBML(buffer, bufferFileOffset, ebml[i]);\n          }\n          // Is this some sort of raw data that we want to write directly?\n        } else if (typeof ebml === 'string') {\n          buffer.writeString(ebml);\n        } else if (ebml instanceof Uint8Array) {\n          buffer.writeBytes(ebml);\n        } else if (ebml.id) {\n          // We're writing an EBML element\n          ebml.offset = buffer.pos + bufferFileOffset;\n          buffer.writeUnsignedIntBE(ebml.id); // ID field\n\n          // Now we need to write the size field, so we must know the payload size:\n\n          if (Array.isArray(ebml.data)) {\n            // Writing an array of child elements. We won't try to measure the size of the children up-front\n\n            var sizePos, dataBegin, dataEnd;\n            if (ebml.size === -1) {\n              // Write the reserved all-one-bits marker to note that the size of this element is unknown/unbounded\n              buffer.writeByte(0xff);\n            } else {\n              sizePos = buffer.pos;\n\n              /* Write a dummy size field to overwrite later. 4 bytes allows an element maximum size of 256MB,\n               * which should be plenty (we don't want to have to buffer that much data in memory at one time\n               * anyway!)\n               */\n              buffer.writeBytes([0, 0, 0, 0]);\n            }\n            dataBegin = buffer.pos;\n            ebml.dataOffset = dataBegin + bufferFileOffset;\n            writeEBML(buffer, bufferFileOffset, ebml.data);\n            if (ebml.size !== -1) {\n              dataEnd = buffer.pos;\n              ebml.size = dataEnd - dataBegin;\n              buffer.seek(sizePos);\n              buffer.writeEBMLVarIntWidth(ebml.size, 4); // Size field\n\n              buffer.seek(dataEnd);\n            }\n          } else if (typeof ebml.data === 'string') {\n            buffer.writeEBMLVarInt(ebml.data.length); // Size field\n            ebml.dataOffset = buffer.pos + bufferFileOffset;\n            buffer.writeString(ebml.data);\n          } else if (typeof ebml.data === 'number') {\n            // Allow the caller to explicitly choose the size if they wish by supplying a size field\n            if (!ebml.size) {\n              ebml.size = buffer.measureUnsignedInt(ebml.data);\n            }\n            buffer.writeEBMLVarInt(ebml.size); // Size field\n            ebml.dataOffset = buffer.pos + bufferFileOffset;\n            buffer.writeUnsignedIntBE(ebml.data, ebml.size);\n          } else if (ebml.data instanceof EBMLFloat64) {\n            buffer.writeEBMLVarInt(8); // Size field\n            ebml.dataOffset = buffer.pos + bufferFileOffset;\n            buffer.writeDoubleBE(ebml.data.value);\n          } else if (ebml.data instanceof EBMLFloat32) {\n            buffer.writeEBMLVarInt(4); // Size field\n            ebml.dataOffset = buffer.pos + bufferFileOffset;\n            buffer.writeFloatBE(ebml.data.value);\n          } else if (ebml.data instanceof Uint8Array) {\n            buffer.writeEBMLVarInt(ebml.data.byteLength); // Size field\n            ebml.dataOffset = buffer.pos + bufferFileOffset;\n            buffer.writeBytes(ebml.data);\n          } else {\n            throw 'Bad EBML datatype ' + typeof ebml.data;\n          }\n        } else {\n          throw 'Bad EBML datatype ' + typeof ebml.data;\n        }\n      }\n      return function (options) {\n        var MAX_CLUSTER_DURATION_MSEC = 5000,\n          DEFAULT_TRACK_NUMBER = 1,\n          writtenHeader = false,\n          videoWidth,\n          videoHeight,\n          clusterFrameBuffer = [],\n          clusterStartTime = 0,\n          clusterDuration = 0,\n          optionDefaults = {\n            quality: 0.95,\n            // WebM image quality from 0.0 (worst) to 1.0 (best)\n            fileWriter: null,\n            // Chrome FileWriter in order to stream to a file instead of buffering to memory (optional)\n            fd: null,\n            // Node.JS file descriptor to write to instead of buffering (optional)\n\n            // You must supply one of:\n            frameDuration: null,\n            // Duration of frames in milliseconds\n            frameRate: null // Number of frames per second\n          },\n          seekPoints = {\n            Cues: {\n              id: new Uint8Array([0x1c, 0x53, 0xbb, 0x6b]),\n              positionEBML: null\n            },\n            SegmentInfo: {\n              id: new Uint8Array([0x15, 0x49, 0xa9, 0x66]),\n              positionEBML: null\n            },\n            Tracks: {\n              id: new Uint8Array([0x16, 0x54, 0xae, 0x6b]),\n              positionEBML: null\n            }\n          },\n          ebmlSegment,\n          segmentDuration = {\n            id: 0x4489,\n            // Duration\n            data: new EBMLFloat64(0)\n          },\n          seekHead,\n          cues = [],\n          blobBuffer = new BlobBuffer(options.fileWriter || options.fd);\n        function fileOffsetToSegmentRelative(fileOffset) {\n          return fileOffset - ebmlSegment.dataOffset;\n        }\n\n        /**\n         * Create a SeekHead element with descriptors for the points in the global seekPoints array.\n         *\n         * 5 bytes of position values are reserved for each node, which lie at the offset point.positionEBML.dataOffset,\n         * to be overwritten later.\n         */\n        function createSeekHead() {\n          var seekPositionEBMLTemplate = {\n              id: 0x53ac,\n              // SeekPosition\n              size: 5,\n              // Allows for 32GB video files\n              data: 0 // We'll overwrite this when the file is complete\n            },\n            result = {\n              id: 0x114d9b74,\n              // SeekHead\n              data: []\n            };\n          for (var name in seekPoints) {\n            var seekPoint = seekPoints[name];\n            seekPoint.positionEBML = Object.create(seekPositionEBMLTemplate);\n            result.data.push({\n              id: 0x4dbb,\n              // Seek\n              data: [{\n                id: 0x53ab,\n                // SeekID\n                data: seekPoint.id\n              }, seekPoint.positionEBML]\n            });\n          }\n          return result;\n        }\n\n        /**\n         * Write the WebM file header to the stream.\n         */\n        function writeHeader() {\n          seekHead = createSeekHead();\n          var ebmlHeader = {\n              id: 0x1a45dfa3,\n              // EBML\n              data: [{\n                id: 0x4286,\n                // EBMLVersion\n                data: 1\n              }, {\n                id: 0x42f7,\n                // EBMLReadVersion\n                data: 1\n              }, {\n                id: 0x42f2,\n                // EBMLMaxIDLength\n                data: 4\n              }, {\n                id: 0x42f3,\n                // EBMLMaxSizeLength\n                data: 8\n              }, {\n                id: 0x4282,\n                // DocType\n                data: 'webm'\n              }, {\n                id: 0x4287,\n                // DocTypeVersion\n                data: 2\n              }, {\n                id: 0x4285,\n                // DocTypeReadVersion\n                data: 2\n              }]\n            },\n            segmentInfo = {\n              id: 0x1549a966,\n              // Info\n              data: [{\n                id: 0x2ad7b1,\n                // TimecodeScale\n                data: 1e6 // Times will be in miliseconds (1e6 nanoseconds per step = 1ms)\n              }, {\n                id: 0x4d80,\n                // MuxingApp\n                data: 'webm-writer-js'\n              }, {\n                id: 0x5741,\n                // WritingApp\n                data: 'webm-writer-js'\n              }, segmentDuration // To be filled in later\n              ]\n            },\n            tracks = {\n              id: 0x1654ae6b,\n              // Tracks\n              data: [{\n                id: 0xae,\n                // TrackEntry\n                data: [{\n                  id: 0xd7,\n                  // TrackNumber\n                  data: DEFAULT_TRACK_NUMBER\n                }, {\n                  id: 0x73c5,\n                  // TrackUID\n                  data: DEFAULT_TRACK_NUMBER\n                }, {\n                  id: 0x9c,\n                  // FlagLacing\n                  data: 0\n                }, {\n                  id: 0x22b59c,\n                  // Language\n                  data: 'und'\n                }, {\n                  id: 0x86,\n                  // CodecID\n                  data: 'V_VP8'\n                }, {\n                  id: 0x258688,\n                  // CodecName\n                  data: 'VP8'\n                }, {\n                  id: 0x83,\n                  // TrackType\n                  data: 1\n                }, {\n                  id: 0xe0,\n                  // Video\n                  data: [{\n                    id: 0xb0,\n                    // PixelWidth\n                    data: videoWidth\n                  }, {\n                    id: 0xba,\n                    // PixelHeight\n                    data: videoHeight\n                  }]\n                }]\n              }]\n            };\n          ebmlSegment = {\n            id: 0x18538067,\n            // Segment\n            size: -1,\n            // Unbounded size\n            data: [seekHead, segmentInfo, tracks]\n          };\n          var bufferStream = new ArrayBufferDataStream(256);\n          writeEBML(bufferStream, blobBuffer.pos, [ebmlHeader, ebmlSegment]);\n          blobBuffer.write(bufferStream.getAsDataArray());\n\n          // Now we know where these top-level elements lie in the file:\n          seekPoints.SegmentInfo.positionEBML.data = fileOffsetToSegmentRelative(segmentInfo.offset);\n          seekPoints.Tracks.positionEBML.data = fileOffsetToSegmentRelative(tracks.offset);\n        }\n\n        /**\n         * Create a SimpleBlock keyframe header using these fields:\n         *     timecode    - Time of this keyframe\n         *     trackNumber - Track number from 1 to 126 (inclusive)\n         *     frame       - Raw frame data payload string\n         *\n         * Returns an EBML element.\n         */\n        function createKeyframeBlock(keyframe) {\n          var bufferStream = new ArrayBufferDataStream(1 + 2 + 1);\n          if (!(keyframe.trackNumber > 0 && keyframe.trackNumber < 127)) {\n            throw 'TrackNumber must be > 0 and < 127';\n          }\n          bufferStream.writeEBMLVarInt(keyframe.trackNumber); // Always 1 byte since we limit the range of trackNumber\n          bufferStream.writeU16BE(keyframe.timecode);\n\n          // Flags byte\n          bufferStream.writeByte(1 << 7 // Keyframe\n          );\n          return {\n            id: 0xa3,\n            // SimpleBlock\n            data: [bufferStream.getAsDataArray(), keyframe.frame]\n          };\n        }\n\n        /**\n         * Create a Cluster node using these fields:\n         *\n         *    timecode    - Start time for the cluster\n         *\n         * Returns an EBML element.\n         */\n        function createCluster(cluster) {\n          return {\n            id: 0x1f43b675,\n            data: [{\n              id: 0xe7,\n              // Timecode\n              data: Math.round(cluster.timecode)\n            }]\n          };\n        }\n        function addCuePoint(trackIndex, clusterTime, clusterFileOffset) {\n          cues.push({\n            id: 0xbb,\n            // Cue\n            data: [{\n              id: 0xb3,\n              // CueTime\n              data: clusterTime\n            }, {\n              id: 0xb7,\n              // CueTrackPositions\n              data: [{\n                id: 0xf7,\n                // CueTrack\n                data: trackIndex\n              }, {\n                id: 0xf1,\n                // CueClusterPosition\n                data: fileOffsetToSegmentRelative(clusterFileOffset)\n              }]\n            }]\n          });\n        }\n\n        /**\n         * Write a Cues element to the blobStream using the global `cues` array of CuePoints (use addCuePoint()).\n         * The seek entry for the Cues in the SeekHead is updated.\n         */\n        function writeCues() {\n          var ebml = {\n              id: 0x1c53bb6b,\n              data: cues\n            },\n            cuesBuffer = new ArrayBufferDataStream(16 + cues.length * 32); // Pretty crude estimate of the buffer size we'll need\n\n          writeEBML(cuesBuffer, blobBuffer.pos, ebml);\n          blobBuffer.write(cuesBuffer.getAsDataArray());\n\n          // Now we know where the Cues element has ended up, we can update the SeekHead\n          seekPoints.Cues.positionEBML.data = fileOffsetToSegmentRelative(ebml.offset);\n        }\n\n        /**\n         * Flush the frames in the current clusterFrameBuffer out to the stream as a Cluster.\n         */\n        function flushClusterFrameBuffer() {\n          if (clusterFrameBuffer.length == 0) {\n            return;\n          }\n\n          // First work out how large of a buffer we need to hold the cluster data\n          var rawImageSize = 0;\n          for (var i = 0; i < clusterFrameBuffer.length; i++) {\n            rawImageSize += clusterFrameBuffer[i].frame.length;\n          }\n          var buffer = new ArrayBufferDataStream(rawImageSize + clusterFrameBuffer.length * 32),\n            // Estimate 32 bytes per SimpleBlock header\n            cluster = createCluster({\n              timecode: Math.round(clusterStartTime)\n            });\n          for (var i = 0; i < clusterFrameBuffer.length; i++) {\n            cluster.data.push(createKeyframeBlock(clusterFrameBuffer[i]));\n          }\n          writeEBML(buffer, blobBuffer.pos, cluster);\n          blobBuffer.write(buffer.getAsDataArray());\n          addCuePoint(DEFAULT_TRACK_NUMBER, Math.round(clusterStartTime), cluster.offset);\n          clusterFrameBuffer = [];\n          clusterStartTime += clusterDuration;\n          clusterDuration = 0;\n        }\n        function validateOptions() {\n          // Derive frameDuration setting if not already supplied\n          if (!options.frameDuration) {\n            if (options.frameRate) {\n              options.frameDuration = 1000 / options.frameRate;\n            } else {\n              throw 'Missing required frameDuration or frameRate setting';\n            }\n          }\n        }\n        function addFrameToCluster(frame) {\n          frame.trackNumber = DEFAULT_TRACK_NUMBER;\n\n          // Frame timecodes are relative to the start of their cluster:\n          frame.timecode = Math.round(clusterDuration);\n          clusterFrameBuffer.push(frame);\n          clusterDuration += frame.duration;\n          if (clusterDuration >= MAX_CLUSTER_DURATION_MSEC) {\n            flushClusterFrameBuffer();\n          }\n        }\n\n        /**\n         * Rewrites the SeekHead element that was initially written to the stream with the offsets of top level elements.\n         *\n         * Call once writing is complete (so the offset of all top level elements is known).\n         */\n        function rewriteSeekHead() {\n          var seekHeadBuffer = new ArrayBufferDataStream(seekHead.size),\n            oldPos = blobBuffer.pos;\n\n          // Write the rewritten SeekHead element's data payload to the stream (don't need to update the id or size)\n          writeEBML(seekHeadBuffer, seekHead.dataOffset, seekHead.data);\n\n          // And write that through to the file\n          blobBuffer.seek(seekHead.dataOffset);\n          blobBuffer.write(seekHeadBuffer.getAsDataArray());\n          blobBuffer.seek(oldPos);\n        }\n\n        /**\n         * Rewrite the Duration field of the Segment with the newly-discovered video duration.\n         */\n        function rewriteDuration() {\n          var buffer = new ArrayBufferDataStream(8),\n            oldPos = blobBuffer.pos;\n\n          // Rewrite the data payload (don't need to update the id or size)\n          buffer.writeDoubleBE(clusterStartTime);\n\n          // And write that through to the file\n          blobBuffer.seek(segmentDuration.dataOffset);\n          blobBuffer.write(buffer.getAsDataArray());\n          blobBuffer.seek(oldPos);\n        }\n\n        /**\n         * Add a frame to the video. Currently the frame must be a Canvas element.\n         */\n        this.addFrame = function (canvas) {\n          if (writtenHeader) {\n            if (canvas.width != videoWidth || canvas.height != videoHeight) {\n              throw 'Frame size differs from previous frames';\n            }\n          } else {\n            videoWidth = canvas.width;\n            videoHeight = canvas.height;\n            writeHeader();\n            writtenHeader = true;\n          }\n          var webP = renderAsWebP(canvas, {\n            quality: options.quality\n          });\n          if (!webP) {\n            throw \"Couldn't decode WebP frame, does the browser support WebP?\";\n          }\n          addFrameToCluster({\n            frame: extractKeyframeFromWebP(webP),\n            duration: options.frameDuration\n          });\n        };\n\n        /**\n         * Finish writing the video and return a Promise to signal completion.\n         *\n         * If the destination device was memory (i.e. options.fileWriter was not supplied), the Promise is resolved with\n         * a Blob with the contents of the entire video.\n         */\n        this.complete = function () {\n          flushClusterFrameBuffer();\n          writeCues();\n          rewriteSeekHead();\n          rewriteDuration();\n          return blobBuffer.complete('video/webm');\n        };\n        this.getWrittenSize = function () {\n          return blobBuffer.length;\n        };\n        options = extend(optionDefaults, options || {});\n        validateOptions();\n      };\n    };\n    if (isNodeEnviroment) {\n      module.exports = WebMWriter(ArrayBufferDataStream, BlobBuffer);\n    } else {\n      window.WebMWriter = WebMWriter(ArrayBufferDataStream, BlobBuffer);\n    }\n  })();\n})(webmWriter0_2_0);\n\n(function (module, exports) {\n  (function () {\n    var Tar = window.Tar;\n    var download = window.download;\n    var GIF = window.GIF;\n    var WebMWriter = window.WebMWriter;\n    var objectTypes = {\n      function: true,\n      object: true\n    };\n    function checkGlobal(value) {\n      return value && value.Object === Object ? value : null;\n    }\n\n    /** Detect free variable `exports`. */\n    var freeExports = exports && !exports.nodeType ? exports : undefined;\n\n    /** Detect free variable `module`. */\n    var freeModule = module && !module.nodeType ? module : undefined;\n\n    /** Detect the popular CommonJS extension `module.exports`. */\n    var moduleExports = freeModule && freeModule.exports === freeExports ? freeExports : undefined;\n\n    /** Detect free variable `global` from Node.js. */\n    var freeGlobal = checkGlobal(freeExports && freeModule && typeof commonjsGlobal == 'object' && commonjsGlobal);\n\n    /** Detect free variable `self`. */\n    var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n    /** Detect free variable `window`. */\n    var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n    /** Detect `this` as the global object. */\n    var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n    /**\n     * Used as a reference to the global object.\n     *\n     * The `this` value is used if it's the global object to avoid Greasemonkey's\n     * restricted `window` object, otherwise the `window` object is used.\n     */\n    var root = freeGlobal || freeWindow !== (thisGlobal && thisGlobal.window) && freeWindow || freeSelf || thisGlobal || Function('return this')();\n    if (!('gc' in window)) {\n      window.gc = function () {};\n    }\n    if (!HTMLCanvasElement.prototype.toBlob) {\n      Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n        value: function (callback, type, quality) {\n          var binStr = atob(this.toDataURL(type, quality).split(',')[1]),\n            len = binStr.length,\n            arr = new Uint8Array(len);\n          for (var i = 0; i < len; i++) {\n            arr[i] = binStr.charCodeAt(i);\n          }\n          callback(new Blob([arr], {\n            type: type || 'image/png'\n          }));\n        }\n      });\n    }\n    (function () {\n      if ('performance' in window == false) {\n        window.performance = {};\n      }\n      Date.now = Date.now || function () {\n        // thanks IE8\n        return new Date().getTime();\n      };\n      if ('now' in window.performance == false) {\n        var nowOffset = Date.now();\n        if (performance.timing && performance.timing.navigationStart) {\n          nowOffset = performance.timing.navigationStart;\n        }\n        window.performance.now = function now() {\n          return Date.now() - nowOffset;\n        };\n      }\n    })();\n    function pad(n) {\n      return String('0000000' + n).slice(-7);\n    }\n    // https://developer.mozilla.org/en-US/Add-ons/Code_snippets/Timers\n\n    var g_startTime = window.Date.now();\n    function guid() {\n      function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n      }\n      return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    }\n    function CCFrameEncoder(settings) {\n      var _handlers = {};\n      this.settings = settings;\n      this.on = function (event, handler) {\n        _handlers[event] = handler;\n      };\n      this.emit = function (event) {\n        var handler = _handlers[event];\n        if (handler) {\n          handler.apply(null, Array.prototype.slice.call(arguments, 1));\n        }\n      };\n      this.filename = settings.name || guid();\n      this.extension = '';\n      this.mimeType = '';\n    }\n    CCFrameEncoder.prototype.start = function () {};\n    CCFrameEncoder.prototype.stop = function () {};\n    CCFrameEncoder.prototype.add = function () {};\n    CCFrameEncoder.prototype.save = function () {};\n    CCFrameEncoder.prototype.dispose = function () {};\n    CCFrameEncoder.prototype.safeToProceed = function () {\n      return true;\n    };\n    CCFrameEncoder.prototype.step = function () {\n      console.log('Step not set!');\n    };\n    function CCTarEncoder(settings) {\n      CCFrameEncoder.call(this, settings);\n      this.extension = '.tar';\n      this.mimeType = 'application/x-tar';\n      this.fileExtension = '';\n      this.baseFilename = this.filename;\n      this.tape = null;\n      this.count = 0;\n      this.part = 1;\n      this.frames = 0;\n    }\n    CCTarEncoder.prototype = Object.create(CCFrameEncoder.prototype);\n    CCTarEncoder.prototype.start = function () {\n      this.dispose();\n    };\n    CCTarEncoder.prototype.add = function (blob) {\n      var fileReader = new FileReader();\n      fileReader.onload = function () {\n        this.tape.append(pad(this.count) + this.fileExtension, new Uint8Array(fileReader.result));\n        if (this.settings.autoSaveTime > 0 && this.frames / this.settings.framerate >= this.settings.autoSaveTime) {\n          this.save(function (blob) {\n            this.filename = this.baseFilename + '-part-' + pad(this.part);\n            download(blob, this.filename + this.extension, this.mimeType);\n            var count = this.count;\n            this.dispose();\n            this.count = count + 1;\n            this.part++;\n            this.filename = this.baseFilename + '-part-' + pad(this.part);\n            this.frames = 0;\n            this.step();\n          }.bind(this));\n        } else {\n          this.count++;\n          this.frames++;\n          this.step();\n        }\n      }.bind(this);\n      fileReader.readAsArrayBuffer(blob);\n    };\n    CCTarEncoder.prototype.save = function (callback) {\n      callback(this.tape.save());\n    };\n    CCTarEncoder.prototype.dispose = function () {\n      this.tape = new Tar();\n      this.count = 0;\n    };\n    function CCPNGEncoder(settings) {\n      CCTarEncoder.call(this, settings);\n      this.type = 'image/png';\n      this.fileExtension = '.png';\n    }\n    CCPNGEncoder.prototype = Object.create(CCTarEncoder.prototype);\n    CCPNGEncoder.prototype.add = function (canvas) {\n      canvas.toBlob(function (blob) {\n        CCTarEncoder.prototype.add.call(this, blob);\n      }.bind(this), this.type);\n    };\n    function CCJPEGEncoder(settings) {\n      CCTarEncoder.call(this, settings);\n      this.type = 'image/jpeg';\n      this.fileExtension = '.jpg';\n      this.quality = settings.quality / 100 || 0.8;\n    }\n    CCJPEGEncoder.prototype = Object.create(CCTarEncoder.prototype);\n    CCJPEGEncoder.prototype.add = function (canvas) {\n      canvas.toBlob(function (blob) {\n        CCTarEncoder.prototype.add.call(this, blob);\n      }.bind(this), this.type, this.quality);\n    };\n\n    /*\n    WebM Encoder\n    */\n\n    function CCWebMEncoder(settings) {\n      var canvas = document.createElement('canvas');\n      if (canvas.toDataURL('image/webp').substr(5, 10) !== 'image/webp') {\n        console.log('WebP not supported - try another export format');\n      }\n      CCFrameEncoder.call(this, settings);\n      this.quality = settings.quality / 100 || 0.8;\n      this.extension = '.webm';\n      this.mimeType = 'video/webm';\n      this.baseFilename = this.filename;\n      this.framerate = settings.framerate;\n      this.frames = 0;\n      this.part = 1;\n      this.videoWriter = new WebMWriter({\n        quality: this.quality,\n        fileWriter: null,\n        fd: null,\n        frameRate: this.framerate\n      });\n    }\n    CCWebMEncoder.prototype = Object.create(CCFrameEncoder.prototype);\n    CCWebMEncoder.prototype.start = function (canvas) {\n      this.dispose();\n    };\n    CCWebMEncoder.prototype.add = function (canvas) {\n      this.videoWriter.addFrame(canvas);\n      if (this.settings.autoSaveTime > 0 && this.frames / this.settings.framerate >= this.settings.autoSaveTime) {\n        this.save(function (blob) {\n          this.filename = this.baseFilename + '-part-' + pad(this.part);\n          download(blob, this.filename + this.extension, this.mimeType);\n          this.dispose();\n          this.part++;\n          this.filename = this.baseFilename + '-part-' + pad(this.part);\n          this.step();\n        }.bind(this));\n      } else {\n        this.frames++;\n        this.step();\n      }\n    };\n    CCWebMEncoder.prototype.save = function (callback) {\n      this.videoWriter.complete().then(callback);\n    };\n    CCWebMEncoder.prototype.dispose = function (canvas) {\n      this.frames = 0;\n      this.videoWriter = new WebMWriter({\n        quality: this.quality,\n        fileWriter: null,\n        fd: null,\n        frameRate: this.framerate\n      });\n    };\n    function CCFFMpegServerEncoder(settings) {\n      CCFrameEncoder.call(this, settings);\n      settings.quality = settings.quality / 100 || 0.8;\n      this.encoder = new FFMpegServer.Video(settings);\n      this.encoder.on('process', function () {\n        this.emit('process');\n      }.bind(this));\n      this.encoder.on('finished', function (url, size) {\n        var cb = this.callback;\n        if (cb) {\n          this.callback = undefined;\n          cb(url, size);\n        }\n      }.bind(this));\n      this.encoder.on('progress', function (progress) {\n        if (this.settings.onProgress) {\n          this.settings.onProgress(progress);\n        }\n      }.bind(this));\n      this.encoder.on('error', function (data) {\n        alert(JSON.stringify(data, null, 2));\n      }.bind(this));\n    }\n    CCFFMpegServerEncoder.prototype = Object.create(CCFrameEncoder.prototype);\n    CCFFMpegServerEncoder.prototype.start = function () {\n      this.encoder.start(this.settings);\n    };\n    CCFFMpegServerEncoder.prototype.add = function (canvas) {\n      this.encoder.add(canvas);\n    };\n    CCFFMpegServerEncoder.prototype.save = function (callback) {\n      this.callback = callback;\n      this.encoder.end();\n    };\n    CCFFMpegServerEncoder.prototype.safeToProceed = function () {\n      return this.encoder.safeToProceed();\n    };\n\n    /*\n    HTMLCanvasElement.captureStream()\n    */\n\n    function CCStreamEncoder(settings) {\n      CCFrameEncoder.call(this, settings);\n      this.framerate = this.settings.framerate;\n      this.type = 'video/webm';\n      this.extension = '.webm';\n      this.stream = null;\n      this.mediaRecorder = null;\n      this.chunks = [];\n    }\n    CCStreamEncoder.prototype = Object.create(CCFrameEncoder.prototype);\n    CCStreamEncoder.prototype.add = function (canvas) {\n      if (!this.stream) {\n        this.stream = canvas.captureStream(this.framerate);\n        this.mediaRecorder = new MediaRecorder(this.stream);\n        this.mediaRecorder.start();\n        this.mediaRecorder.ondataavailable = function (e) {\n          this.chunks.push(e.data);\n        }.bind(this);\n      }\n      this.step();\n    };\n    CCStreamEncoder.prototype.save = function (callback) {\n      this.mediaRecorder.onstop = function (e) {\n        var blob = new Blob(this.chunks, {\n          type: 'video/webm'\n        });\n        this.chunks = [];\n        callback(blob);\n      }.bind(this);\n      this.mediaRecorder.stop();\n    };\n\n    /*function CCGIFEncoder( settings ) {\n    CCFrameEncoder.call( this );\n    settings.quality = settings.quality || 6;\n    this.settings = settings;\n    this.encoder = new GIFEncoder();\n    this.encoder.setRepeat( 1 );\n    \tthis.encoder.setDelay( settings.step );\n    \tthis.encoder.setQuality( 6 );\n    \tthis.encoder.setTransparent( null );\n    \tthis.encoder.setSize( 150, 150 );\n     \tthis.canvas = document.createElement( 'canvas' );\n    \tthis.ctx = this.canvas.getContext( '2d' );\n    }\n    CCGIFEncoder.prototype = Object.create( CCFrameEncoder );\n    CCGIFEncoder.prototype.start = function() {\n    this.encoder.start();\n    }\n    CCGIFEncoder.prototype.add = function( canvas ) {\n    this.canvas.width = canvas.width;\n    this.canvas.height = canvas.height;\n    this.ctx.drawImage( canvas, 0, 0 );\n    this.encoder.addFrame( this.ctx );\n    this.encoder.setSize( canvas.width, canvas.height );\n    var readBuffer = new Uint8Array(canvas.width * canvas.height * 4);\n    var context = canvas.getContext( 'webgl' );\n    context.readPixels(0, 0, canvas.width, canvas.height, context.RGBA, context.UNSIGNED_BYTE, readBuffer);\n    this.encoder.addFrame( readBuffer, true );\n    }\n    CCGIFEncoder.prototype.stop = function() {\n    this.encoder.finish();\n    }\n    CCGIFEncoder.prototype.save = function( callback ) {\n    var binary_gif = this.encoder.stream().getData();\n    var data_url = 'data:image/gif;base64,'+encode64(binary_gif);\n    window.location = data_url;\n    return;\n    var blob = new Blob( [ binary_gif ], { type: \"octet/stream\" } );\n    var url = window.URL.createObjectURL( blob );\n    callback( url );\n    }*/\n\n    function CCGIFEncoder(settings) {\n      CCFrameEncoder.call(this, settings);\n      settings.quality = 31 - (settings.quality * 30 / 100 || 10);\n      settings.workers = settings.workers || 4;\n      this.extension = '.gif';\n      this.mimeType = 'image/gif';\n      this.canvas = document.createElement('canvas');\n      this.ctx = this.canvas.getContext('2d');\n      this.sizeSet = false;\n      this.encoder = new GIF({\n        workers: settings.workers,\n        quality: settings.quality,\n        workerScript: settings.workersPath + 'gif.worker.js'\n      });\n      this.encoder.on('progress', function (progress) {\n        if (this.settings.onProgress) {\n          this.settings.onProgress(progress);\n        }\n      }.bind(this));\n      this.encoder.on('finished', function (blob) {\n        var cb = this.callback;\n        if (cb) {\n          this.callback = undefined;\n          cb(blob);\n        }\n      }.bind(this));\n    }\n    CCGIFEncoder.prototype = Object.create(CCFrameEncoder.prototype);\n    CCGIFEncoder.prototype.add = function (canvas) {\n      if (!this.sizeSet) {\n        this.encoder.setOption('width', canvas.width);\n        this.encoder.setOption('height', canvas.height);\n        this.sizeSet = true;\n      }\n      this.canvas.width = canvas.width;\n      this.canvas.height = canvas.height;\n      this.ctx.drawImage(canvas, 0, 0);\n      this.encoder.addFrame(this.ctx, {\n        copy: true,\n        delay: this.settings.step\n      });\n      this.step();\n\n      /*this.encoder.setSize( canvas.width, canvas.height );\n      var readBuffer = new Uint8Array(canvas.width * canvas.height * 4);\n      var context = canvas.getContext( 'webgl' );\n      context.readPixels(0, 0, canvas.width, canvas.height, context.RGBA, context.UNSIGNED_BYTE, readBuffer);\n      this.encoder.addFrame( readBuffer, true );*/\n    };\n    CCGIFEncoder.prototype.save = function (callback) {\n      this.callback = callback;\n      this.encoder.render();\n    };\n    function CCapture(settings) {\n      var _settings = settings || {},\n        _verbose,\n        _time,\n        _startTime,\n        _performanceTime,\n        _performanceStartTime,\n        _step,\n        _encoder,\n        _timeouts = [],\n        _intervals = [],\n        _frameCount = 0,\n        _intermediateFrameCount = 0,\n        _requestAnimationFrameCallbacks = [],\n        _capturing = false,\n        _handlers = {};\n      _settings.framerate = _settings.framerate || 60;\n      _settings.motionBlurFrames = 2 * (_settings.motionBlurFrames || 1);\n      _verbose = _settings.verbose || false;\n      _settings.display || false;\n      _settings.step = 1000.0 / _settings.framerate;\n      _settings.timeLimit = _settings.timeLimit || 0;\n      _settings.frameLimit = _settings.frameLimit || 0;\n      _settings.startTime = _settings.startTime || 0;\n      var _timeDisplay = document.createElement('div');\n      _timeDisplay.style.position = 'absolute';\n      _timeDisplay.style.left = _timeDisplay.style.top = 0;\n      _timeDisplay.style.backgroundColor = 'black';\n      _timeDisplay.style.fontFamily = 'monospace';\n      _timeDisplay.style.fontSize = '11px';\n      _timeDisplay.style.padding = '5px';\n      _timeDisplay.style.color = 'red';\n      _timeDisplay.style.zIndex = 100000;\n      if (_settings.display) document.body.appendChild(_timeDisplay);\n      var canvasMotionBlur = document.createElement('canvas');\n      var ctxMotionBlur = canvasMotionBlur.getContext('2d');\n      var bufferMotionBlur;\n      var imageData;\n      _log('Step is set to ' + _settings.step + 'ms');\n      var _encoders = {\n        gif: CCGIFEncoder,\n        webm: CCWebMEncoder,\n        ffmpegserver: CCFFMpegServerEncoder,\n        png: CCPNGEncoder,\n        jpg: CCJPEGEncoder,\n        'webm-mediarecorder': CCStreamEncoder\n      };\n      var ctor = _encoders[_settings.format];\n      if (!ctor) {\n        throw 'Error: Incorrect or missing format: Valid formats are ' + Object.keys(_encoders).join(', ');\n      }\n      _encoder = new ctor(_settings);\n      _encoder.step = _step;\n      _encoder.on('process', _process);\n      _encoder.on('progress', _progress);\n      if ('performance' in window == false) {\n        window.performance = {};\n      }\n      Date.now = Date.now || function () {\n        // thanks IE8\n        return new Date().getTime();\n      };\n      if ('now' in window.performance == false) {\n        var nowOffset = Date.now();\n        if (performance.timing && performance.timing.navigationStart) {\n          nowOffset = performance.timing.navigationStart;\n        }\n        window.performance.now = function now() {\n          return Date.now() - nowOffset;\n        };\n      }\n      var _oldSetTimeout = window.setTimeout,\n        _oldSetInterval = window.setInterval,\n        _oldClearInterval = window.clearInterval,\n        _oldClearTimeout = window.clearTimeout,\n        _oldRequestAnimationFrame = window.requestAnimationFrame,\n        _oldNow = window.Date.now,\n        _oldPerformanceNow = window.performance.now,\n        _oldGetTime = window.Date.prototype.getTime;\n      // Date.prototype._oldGetTime = Date.prototype.getTime;\n\n      var media = [];\n      function _init() {\n        _log('Capturer start');\n        _startTime = window.Date.now();\n        _time = _startTime + _settings.startTime;\n        _performanceStartTime = window.performance.now();\n        _performanceTime = _performanceStartTime + _settings.startTime;\n        window.Date.prototype.getTime = function () {\n          return _time;\n        };\n        window.Date.now = function () {\n          return _time;\n        };\n        window.setTimeout = function (callback, time) {\n          time = 5000;\n          var t = {\n            callback: callback,\n            time: time,\n            triggerTime: _time + time\n          };\n          _timeouts.push(t);\n          _log('Timeout set to ' + t.time);\n          return t;\n        };\n        window.clearTimeout = function (id) {\n          for (var j = 0; j < _timeouts.length; j++) {\n            if (_timeouts[j] == id) {\n              _timeouts.splice(j, 1);\n              _log('Timeout cleared');\n              continue;\n            }\n          }\n        };\n        window.setInterval = function (callback, time) {\n          var t = {\n            callback: callback,\n            time: time,\n            triggerTime: _time + time\n          };\n          _intervals.push(t);\n          _log('Interval set to ' + t.time);\n          return t;\n        };\n        window.clearInterval = function (id) {\n          _log('clear Interval');\n          return null;\n        };\n        window.requestAnimationFrame = function (callback) {\n          _requestAnimationFrameCallbacks.push(callback);\n        };\n        window.performance.now = function () {\n          return _performanceTime;\n        };\n        function hookCurrentTime() {\n          if (!this._hooked) {\n            this._hooked = true;\n            this._hookedTime = this.currentTime || 0;\n            this.pause();\n            media.push(this);\n          }\n          return this._hookedTime + _settings.startTime;\n        }\n        try {\n          Object.defineProperty(HTMLVideoElement.prototype, 'currentTime', {\n            get: hookCurrentTime\n          });\n          Object.defineProperty(HTMLAudioElement.prototype, 'currentTime', {\n            get: hookCurrentTime\n          });\n        } catch (err) {\n          _log(err);\n        }\n      }\n      function _start() {\n        _init();\n        _encoder.start();\n        _capturing = true;\n      }\n      function _stop() {\n        _capturing = false;\n        _encoder.stop();\n        _destroy();\n      }\n      function _call(fn, p) {\n        _oldSetTimeout(fn, 0, p);\n      }\n      function _step() {\n        //_oldRequestAnimationFrame( _process );\n        _call(_process);\n      }\n      function _destroy() {\n        _log('Capturer stop');\n        window.setTimeout = _oldSetTimeout;\n        window.setInterval = _oldSetInterval;\n        window.clearInterval = _oldClearInterval;\n        window.clearTimeout = _oldClearTimeout;\n        window.requestAnimationFrame = _oldRequestAnimationFrame;\n        window.Date.prototype.getTime = _oldGetTime;\n        window.Date.now = _oldNow;\n        window.performance.now = _oldPerformanceNow;\n      }\n      function _updateTime() {\n        var seconds = _frameCount / _settings.framerate;\n        if (_settings.frameLimit && _frameCount >= _settings.frameLimit || _settings.timeLimit && seconds >= _settings.timeLimit) {\n          _stop();\n          _save();\n        }\n        var d = new Date(null);\n        d.setSeconds(seconds);\n        if (_settings.motionBlurFrames > 2) {\n          _timeDisplay.textContent = 'CCapture ' + _settings.format + ' | ' + _frameCount + ' frames (' + _intermediateFrameCount + ' inter) | ' + d.toISOString().substr(11, 8);\n        } else {\n          _timeDisplay.textContent = 'CCapture ' + _settings.format + ' | ' + _frameCount + ' frames | ' + d.toISOString().substr(11, 8);\n        }\n      }\n      function _checkFrame(canvas) {\n        if (canvasMotionBlur.width !== canvas.width || canvasMotionBlur.height !== canvas.height) {\n          canvasMotionBlur.width = canvas.width;\n          canvasMotionBlur.height = canvas.height;\n          bufferMotionBlur = new Uint16Array(canvasMotionBlur.height * canvasMotionBlur.width * 4);\n          ctxMotionBlur.fillStyle = '#0';\n          ctxMotionBlur.fillRect(0, 0, canvasMotionBlur.width, canvasMotionBlur.height);\n        }\n      }\n      function _blendFrame(canvas) {\n        //_log( 'Intermediate Frame: ' + _intermediateFrameCount );\n\n        ctxMotionBlur.drawImage(canvas, 0, 0);\n        imageData = ctxMotionBlur.getImageData(0, 0, canvasMotionBlur.width, canvasMotionBlur.height);\n        for (var j = 0; j < bufferMotionBlur.length; j += 4) {\n          bufferMotionBlur[j] += imageData.data[j];\n          bufferMotionBlur[j + 1] += imageData.data[j + 1];\n          bufferMotionBlur[j + 2] += imageData.data[j + 2];\n        }\n        _intermediateFrameCount++;\n      }\n      function _saveFrame() {\n        var data = imageData.data;\n        for (var j = 0; j < bufferMotionBlur.length; j += 4) {\n          data[j] = bufferMotionBlur[j] * 2 / _settings.motionBlurFrames;\n          data[j + 1] = bufferMotionBlur[j + 1] * 2 / _settings.motionBlurFrames;\n          data[j + 2] = bufferMotionBlur[j + 2] * 2 / _settings.motionBlurFrames;\n        }\n        ctxMotionBlur.putImageData(imageData, 0, 0);\n        _encoder.add(canvasMotionBlur);\n        _frameCount++;\n        _intermediateFrameCount = 0;\n        _log('Full MB Frame! ' + _frameCount + ' ' + _time);\n        for (var j = 0; j < bufferMotionBlur.length; j += 4) {\n          bufferMotionBlur[j] = 0;\n          bufferMotionBlur[j + 1] = 0;\n          bufferMotionBlur[j + 2] = 0;\n        }\n        gc();\n      }\n      function _capture(canvas) {\n        if (_capturing) {\n          if (_settings.motionBlurFrames > 2) {\n            _checkFrame(canvas);\n            _blendFrame(canvas);\n            if (_intermediateFrameCount >= 0.5 * _settings.motionBlurFrames) {\n              _saveFrame();\n            } else {\n              _step();\n            }\n          } else {\n            _encoder.add(canvas);\n            _frameCount++;\n            _log('Full Frame! ' + _frameCount);\n          }\n        }\n      }\n      function _process() {\n        var step = 1000 / _settings.framerate;\n        var dt = (_frameCount + _intermediateFrameCount / _settings.motionBlurFrames) * step;\n        _time = _startTime + dt;\n        _performanceTime = _performanceStartTime + dt;\n        media.forEach(function (v) {\n          v._hookedTime = dt / 1000;\n        });\n        _updateTime();\n        _log('Frame: ' + _frameCount + ' ' + _intermediateFrameCount);\n        for (var j = 0; j < _timeouts.length; j++) {\n          if (_time >= _timeouts[j].triggerTime) {\n            _call(_timeouts[j].callback);\n            //console.log( 'timeout!' );\n            _timeouts.splice(j, 1);\n            continue;\n          }\n        }\n        for (var j = 0; j < _intervals.length; j++) {\n          if (_time >= _intervals[j].triggerTime) {\n            _call(_intervals[j].callback);\n            _intervals[j].triggerTime += _intervals[j].time;\n            //console.log( 'interval!' );\n            continue;\n          }\n        }\n        _requestAnimationFrameCallbacks.forEach(function (cb) {\n          _call(cb, _time - g_startTime);\n        });\n        _requestAnimationFrameCallbacks = [];\n      }\n      function _save(callback) {\n        if (!callback) {\n          callback = function (blob) {\n            download(blob, _encoder.filename + _encoder.extension, _encoder.mimeType);\n            return false;\n          };\n        }\n        _encoder.save(callback);\n      }\n      function _log(message) {\n        if (_verbose) console.log(message);\n      }\n      function _on(event, handler) {\n        _handlers[event] = handler;\n      }\n      function _emit(event) {\n        var handler = _handlers[event];\n        if (handler) {\n          handler.apply(null, Array.prototype.slice.call(arguments, 1));\n        }\n      }\n      function _progress(progress) {\n        _emit('progress', progress);\n      }\n      return {\n        start: _start,\n        capture: _capture,\n        stop: _stop,\n        save: _save,\n        on: _on\n      };\n    }\n    (freeWindow || freeSelf || {}).CCapture = CCapture;\n\n    // Some AMD build optimizers like r.js check for condition patterns like the following:\n    if (freeExports && freeModule) {\n      // Export for Node.js.\n      if (moduleExports) {\n        (freeModule.exports = CCapture).CCapture = CCapture;\n      }\n      // Export for CommonJS support.\n      freeExports.CCapture = CCapture;\n    } else {\n      // Export to the global object.\n      root.CCapture = CCapture;\n    }\n  })();\n})(CCapture$2, CCapture$2.exports);\nvar CCapture = CCapture$2.exports;\n\nvar CCapture$1 = /*#__PURE__*/_mergeNamespaces({\n  __proto__: null,\n  'default': CCapture\n}, [CCapture$2.exports]);\n\nexport { CCapture$1 as C };\n//# sourceMappingURL=CCapture-31e23e91.js.map\n","var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nexport { commonjsGlobal as c };\n//# sourceMappingURL=_commonjsHelpers-1c8beb5f.js.map\n"],"names":["module","headerFormat","utils","ArrayBufferDataStream","BlobBuffer","exports","n","CCapture$2","lookup","clean","length","i","buffer","Uint8Array","window","pad","num","bytes","base","toString","substr","extend","orig","addLength","multipleOf","parseInt","newSize","set","stringToUint8","input","out","offset","charCodeAt","uint8ToBase64","uint8","extraBytes","output","field","header","structure","format","data","cb","forEach","value","str","blockSize","Tar","recordsPerBlock","written","blocks","prototype","append","filepath","opts","callback","constructor","match","mode","mtime","Math","floor","Date","uid","gid","fileName","fileMode","fileSize","checksum","type","ustar","owner","group","Object","keys","key","headerArr","headerLength","ceil","inputLength","push","save","buffers","chunks","chunk","b","c","Blob","clear","_commonjsHelpers_1c8beb5f_js__WEBPACK_IMPORTED_MODULE_0__","download","strFileName","strMimeType","blob","reader","self","defaultMime","mimeType","payload","url","anchor","document","createElement","a","String","myBlob","MozBlob","WebKitBlob","call","bind","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","e","target","response","setTimeout","send","test","navigator","msSaveBlob","dataUrlToBlob","saver","tempUiArr","mx","strUrl","parts","binData","decoder","atob","decodeURIComponent","uiArr","winMode","setAttribute","className","innerHTML","style","display","addEventListener","stopPropagation","removeEventListener","arguments","callee","body","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","replace","confirm","location","f","src","createObjectURL","btoa","y","encodeURIComponent","FileReader","result","readAsDataURL","d","hasOwnProperty","cache","resolve","id","require","filename","loaded","parent","children","slice","lastIndexOf","modules","define","title","version","browser","env","argv","nextTick","setImmediate","cwd","chdir","m","l","k","h","g","EventEmitter","running","options","frames","freeWorkers","activeWorkers","setOptions","__super__","workerScript","workers","repeat","background","quality","width","height","transparent","delay","copy","setOption","_canvas","addFrame","ImageData","CanvasRenderingContext2D","WebGLRenderingContext","getContextData","context","childNodes","getImageData","image","render","nextFrame","finishedFrames","imageParts","apply","spawnWorkers","renderNextFrame","emit","abort","shift","console","log","terminate","min","Worker","onmessage","splice","frameFinished","index","j","finishRendering","pageSize","cursor","round","getTask","postMessage","getContext","setFill","fillRect","drawImage","last","canTransfer","name","toLowerCase","platform","documentMode","parseFloat","Array","isArray","setMaxListeners","_events","maxListeners","error","Error","addListener","warned","undefined","trace","on","once","removeListener","removeAllListeners","listeners","GIF","pos","seek","writeBytes","arr","writeByte","writeU8","writeU16BE","u","writeDoubleBE","Float64Array","writeFloatBE","Float32Array","writeString","s","writeEBMLVarIntWidth","RuntimeException","measureEBMLVarInt","val","writeEBMLVarInt","writeUnsignedIntBE","measureUnsignedInt","getAsDataArray","byteLength","subarray","destination","writePromise","Promise","fileWriter","readBlobAsBuffer","reject","readAsArrayBuffer","convertToUint8Array","thing","ArrayBuffer","isView","then","FileWriter","isNaN","write","newEntry","measureData","size","Number","isInteger","isAppend","max","onwriteend","entry","entryArray","newEntryArray","complete","WebMWriter","EBMLFloat32","EBMLFloat64","writeEBML","bufferFileOffset","ebml","sizePos","dataBegin","dataEnd","dataOffset","videoWidth","videoHeight","ebmlSegment","seekHead","writtenHeader","clusterFrameBuffer","clusterStartTime","clusterDuration","seekPoints","Cues","positionEBML","SegmentInfo","Tracks","segmentDuration","cues","blobBuffer","fd","fileOffsetToSegmentRelative","fileOffset","flushClusterFrameBuffer","clusterTime","clusterFileOffset","rawImageSize","frame","cluster","createKeyframeBlock","keyframe","bufferStream","trackNumber","timecode","canvas","createSeekHead","seekPositionEBMLTemplate","seekPoint","create","segmentInfo","tracks","webP","toDataURL","substring","extractKeyframeFromWebP","keyframeStartIndex","duration","frameDuration","cuesBuffer","seekHeadBuffer","oldPos","getWrittenSize","frameRate","obj","prop","validateOptions","objectTypes","function","object","checkGlobal","freeExports","nodeType","freeModule","moduleExports","freeGlobal","freeSelf","freeWindow","thisGlobal","root","Function","gc","HTMLCanvasElement","toBlob","defineProperty","binStr","len","performance","now","getTime","nowOffset","timing","navigationStart","g_startTime","CCFrameEncoder","settings","_handlers","event","handler","guid","s4","random","extension","CCTarEncoder","fileExtension","baseFilename","tape","count","part","CCPNGEncoder","CCJPEGEncoder","CCWebMEncoder","framerate","videoWriter","CCFFMpegServerEncoder","encoder","FFMpegServer","Video","progress","onProgress","alert","JSON","stringify","CCStreamEncoder","stream","mediaRecorder","CCGIFEncoder","ctx","sizeSet","workersPath","CCapture","bufferMotionBlur","imageData","_verbose","_time","_startTime","_performanceTime","_performanceStartTime","_step","_encoder","_settings","_timeouts","_intervals","_frameCount","_intermediateFrameCount","_requestAnimationFrameCallbacks","_capturing","motionBlurFrames","verbose","step","timeLimit","frameLimit","startTime","_timeDisplay","position","left","top","backgroundColor","fontFamily","fontSize","padding","color","zIndex","canvasMotionBlur","ctxMotionBlur","_log","_encoders","gif","webm","ffmpegserver","png","jpg","ctor","join","_process","_emit","_oldSetTimeout","_oldSetInterval","setInterval","_oldClearInterval","clearInterval","_oldClearTimeout","clearTimeout","_oldRequestAnimationFrame","requestAnimationFrame","_oldNow","_oldPerformanceNow","_oldGetTime","media","_stop","stop","p","seconds","dt","v","_hookedTime","_save","setSeconds","textContent","toISOString","triggerTime","time","message","start","_init","hookCurrentTime","_hooked","currentTime","pause","t","HTMLVideoElement","get","HTMLAudioElement","err","capture","Uint16Array","fillStyle","_blendFrame","_saveFrame","putImageData","add","dispose","safeToProceed","fileReader","autoSaveTime","end","captureStream","MediaRecorder","ondataavailable","onstop","CCapture$1","__proto__","getOwnPropertyDescriptor","enumerable","freeze","commonjsGlobal","globalThis","global"],"sourceRoot":""}