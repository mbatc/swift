{"version":3,"file":"static/chunks/103.8e4b30096e06b753.js","mappings":"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","sources":["webpack://_N_E/../../react-swift/dist/CCapture.min-3b6f0b97.js","webpack://_N_E/../../react-swift/dist/_commonjsHelpers-1c8beb5f.js","webpack://_N_E/<anon>"],"sourcesContent":["import { c as commonjsGlobal } from './_commonjsHelpers-1c8beb5f.js';\n\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function (e) {\n    e && typeof e !== 'string' && !Array.isArray(e) && Object.keys(e).forEach(function (k) {\n      if (k !== 'default' && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n\nvar CCapture_min$2 = {exports: {}};\n\nvar tar = {exports: {}};\n\n(function (module) {\n  (function () {\n\n    var lookup = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/'];\n    function clean(length) {\n      var i,\n        buffer = new Uint8Array(length);\n      for (i = 0; i < length; i += 1) {\n        buffer[i] = 0;\n      }\n      return buffer;\n    }\n    function extend(orig, length, addLength, multipleOf) {\n      var newSize = length + addLength,\n        buffer = clean((parseInt(newSize / multipleOf) + 1) * multipleOf);\n      buffer.set(orig);\n      return buffer;\n    }\n    function pad(num, bytes, base) {\n      num = num.toString(base || 8);\n      return '000000000000'.substr(num.length + 12 - bytes) + num;\n    }\n    function stringToUint8(input, out, offset) {\n      var i, length;\n      out = out || clean(input.length);\n      offset = offset || 0;\n      for (i = 0, length = input.length; i < length; i += 1) {\n        out[offset] = input.charCodeAt(i);\n        offset += 1;\n      }\n      return out;\n    }\n    function uint8ToBase64(uint8) {\n      var i,\n        extraBytes = uint8.length % 3,\n        // if we have 1 byte left, pad 2 bytes\n        output = '',\n        temp,\n        length;\n      function tripletToBase64(num) {\n        return lookup[num >> 18 & 0x3f] + lookup[num >> 12 & 0x3f] + lookup[num >> 6 & 0x3f] + lookup[num & 0x3f];\n      }\n\n      // go through the array every three bytes, we'll deal with trailing stuff later\n      for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n        temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n        output += tripletToBase64(temp);\n      }\n\n      // this prevents an ERR_INVALID_URL in Chrome (Firefox okay)\n      switch (output.length % 4) {\n        case 1:\n          output += '=';\n          break;\n        case 2:\n          output += '==';\n          break;\n      }\n      return output;\n    }\n    window.utils = {};\n    window.utils.clean = clean;\n    window.utils.pad = pad;\n    window.utils.extend = extend;\n    window.utils.stringToUint8 = stringToUint8;\n    window.utils.uint8ToBase64 = uint8ToBase64;\n  })();\n  (function () {\n\n    /*\n    struct posix_header {             // byte offset\n    char name[100];               //   0\n    char mode[8];                 // 100\n    char uid[8];                  // 108\n    char gid[8];                  // 116\n    char size[12];                // 124\n    char mtime[12];               // 136\n    char chksum[8];               // 148\n    char typeflag;                // 156\n    char linkname[100];           // 157\n    char magic[6];                // 257\n    char version[2];              // 263\n    char uname[32];               // 265\n    char gname[32];               // 297\n    char devmajor[8];             // 329\n    char devminor[8];             // 337\n    char prefix[155];             // 345\n                                    // 500\n    };\n    */\n    var utils = window.utils,\n      headerFormat;\n    headerFormat = [{\n      field: 'fileName',\n      length: 100\n    }, {\n      field: 'fileMode',\n      length: 8\n    }, {\n      field: 'uid',\n      length: 8\n    }, {\n      field: 'gid',\n      length: 8\n    }, {\n      field: 'fileSize',\n      length: 12\n    }, {\n      field: 'mtime',\n      length: 12\n    }, {\n      field: 'checksum',\n      length: 8\n    }, {\n      field: 'type',\n      length: 1\n    }, {\n      field: 'linkName',\n      length: 100\n    }, {\n      field: 'ustar',\n      length: 8\n    }, {\n      field: 'owner',\n      length: 32\n    }, {\n      field: 'group',\n      length: 32\n    }, {\n      field: 'majorNumber',\n      length: 8\n    }, {\n      field: 'minorNumber',\n      length: 8\n    }, {\n      field: 'filenamePrefix',\n      length: 155\n    }, {\n      field: 'padding',\n      length: 12\n    }];\n    function formatHeader(data, cb) {\n      var buffer = utils.clean(512),\n        offset = 0;\n      headerFormat.forEach(function (value) {\n        var str = data[value.field] || '',\n          i,\n          length;\n        for (i = 0, length = str.length; i < length; i += 1) {\n          buffer[offset] = str.charCodeAt(i);\n          offset += 1;\n        }\n        offset += value.length - i; // space it out with nulls\n      });\n      if (typeof cb === 'function') {\n        return cb(buffer, offset);\n      }\n      return buffer;\n    }\n    window.header = {};\n    window.header.structure = headerFormat;\n    window.header.format = formatHeader;\n  })();\n  (function () {\n\n    var header = window.header,\n      utils = window.utils,\n      recordSize = 512,\n      blockSize;\n    function Tar(recordsPerBlock) {\n      this.written = 0;\n      blockSize = (recordsPerBlock || 20) * recordSize;\n      this.out = utils.clean(blockSize);\n      this.blocks = [];\n      this.length = 0;\n    }\n    Tar.prototype.append = function (filepath, input, opts, callback) {\n      var data, checksum, mode, mtime, uid, gid, headerArr;\n      if (typeof input === 'string') {\n        input = utils.stringToUint8(input);\n      } else if (input.constructor !== Uint8Array.prototype.constructor) {\n        throw 'Invalid input type. You gave me: ' + input.constructor.toString().match(/function\\s*([$A-Za-z_][0-9A-Za-z_]*)\\s*\\(/)[1];\n      }\n      if (typeof opts === 'function') {\n        opts = {};\n      }\n      opts = opts || {};\n      mode = opts.mode || parseInt('777', 8) & 0xfff;\n      mtime = opts.mtime || Math.floor(+new Date() / 1000);\n      uid = opts.uid || 0;\n      gid = opts.gid || 0;\n      data = {\n        fileName: filepath,\n        fileMode: utils.pad(mode, 7),\n        uid: utils.pad(uid, 7),\n        gid: utils.pad(gid, 7),\n        fileSize: utils.pad(input.length, 11),\n        mtime: utils.pad(mtime, 11),\n        checksum: '        ',\n        type: '0',\n        // just a file\n        ustar: 'ustar  ',\n        owner: opts.owner || '',\n        group: opts.group || ''\n      };\n\n      // calculate the checksum\n      checksum = 0;\n      Object.keys(data).forEach(function (key) {\n        var i,\n          value = data[key],\n          length;\n        for (i = 0, length = value.length; i < length; i += 1) {\n          checksum += value.charCodeAt(i);\n        }\n      });\n      data.checksum = utils.pad(checksum, 6) + '\\u0000 ';\n      headerArr = header.format(data);\n      var headerLength = Math.ceil(headerArr.length / recordSize) * recordSize;\n      var inputLength = Math.ceil(input.length / recordSize) * recordSize;\n      this.blocks.push({\n        header: headerArr,\n        input: input,\n        headerLength: headerLength,\n        inputLength: inputLength\n      });\n    };\n    Tar.prototype.save = function () {\n      var buffers = [];\n      var chunks = [];\n      var length = 0;\n      var max = Math.pow(2, 20);\n      var chunk = [];\n      this.blocks.forEach(function (b) {\n        if (length + b.headerLength + b.inputLength > max) {\n          chunks.push({\n            blocks: chunk,\n            length: length\n          });\n          chunk = [];\n          length = 0;\n        }\n        chunk.push(b);\n        length += b.headerLength + b.inputLength;\n      });\n      chunks.push({\n        blocks: chunk,\n        length: length\n      });\n      chunks.forEach(function (c) {\n        var buffer = new Uint8Array(c.length);\n        var written = 0;\n        c.blocks.forEach(function (b) {\n          buffer.set(b.header, written);\n          written += b.headerLength;\n          buffer.set(b.input, written);\n          written += b.inputLength;\n        });\n        buffers.push(buffer);\n      });\n      buffers.push(new Uint8Array(2 * recordSize));\n      return new Blob(buffers, {\n        type: 'octet/stream'\n      });\n    };\n    Tar.prototype.clear = function () {\n      this.written = 0;\n      this.out = utils.clean(blockSize);\n    };\n    {\n      module.exports = Tar;\n    }\n  })();\n})(tar);\n\nvar download = {exports: {}};\n\n(function (module, exports) {\n  (function (root, factory) {\n    {\n      // Node. Does not work with strict CommonJS, but\n      // only CommonJS-like environments that support module.exports,\n      // like Node.\n      module.exports = factory();\n    }\n  })(commonjsGlobal, function () {\n    return function download(data, strFileName, strMimeType) {\n      var self = window,\n        // this script is only for browsers anyway...\n        defaultMime = 'application/octet-stream',\n        // this default mime also triggers iframe downloads\n        mimeType = strMimeType || defaultMime,\n        payload = data,\n        url = !strFileName && !strMimeType && payload,\n        anchor = document.createElement('a'),\n        toString = function (a) {\n          return String(a);\n        },\n        myBlob = self.Blob || self.MozBlob || self.WebKitBlob || toString,\n        fileName = strFileName || 'download',\n        blob,\n        reader;\n      myBlob = myBlob.call ? myBlob.bind(self) : Blob;\n      if (String(this) === 'true') {\n        //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n        payload = [payload, mimeType];\n        mimeType = payload[0];\n        payload = payload[1];\n      }\n      if (url && url.length < 2048) {\n        // if no filename and no mime, assume a url was passed as the only argument\n        fileName = url.split('/').pop().split('?')[0];\n        anchor.href = url; // assign href prop to temp anchor\n        if (anchor.href.indexOf(url) !== -1) {\n          // if the browser determines that it's a potentially valid url path:\n          var ajax = new XMLHttpRequest();\n          ajax.open('GET', url, true);\n          ajax.responseType = 'blob';\n          ajax.onload = function (e) {\n            download(e.target.response, fileName, defaultMime);\n          };\n          setTimeout(function () {\n            ajax.send();\n          }, 0); // allows setting custom ajax headers using the return:\n          return ajax;\n        } // end if valid url?\n      } // end if url?\n\n      //go ahead and download dataURLs right away\n      if (/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)) {\n        if (payload.length > 1024 * 1024 * 1.999 && myBlob !== toString) {\n          payload = dataUrlToBlob(payload);\n          mimeType = payload.type || defaultMime;\n        } else {\n          return navigator.msSaveBlob // IE10 can't do a[download], only Blobs:\n          ? navigator.msSaveBlob(dataUrlToBlob(payload), fileName) : saver(payload); // everyone else can save dataURLs un-processed\n        }\n      } else {\n        //not data url, is it a string with special needs?\n        if (/([\\x80-\\xff])/.test(payload)) {\n          var i = 0,\n            tempUiArr = new Uint8Array(payload.length),\n            mx = tempUiArr.length;\n          for (i; i < mx; ++i) tempUiArr[i] = payload.charCodeAt(i);\n          payload = new myBlob([tempUiArr], {\n            type: mimeType\n          });\n        }\n      }\n      blob = payload instanceof myBlob ? payload : new myBlob([payload], {\n        type: mimeType\n      });\n      function dataUrlToBlob(strUrl) {\n        var parts = strUrl.split(/[:;,]/),\n          type = parts[1],\n          indexDecoder = strUrl.indexOf('charset') > 0 ? 3 : 2,\n          decoder = parts[indexDecoder] == 'base64' ? atob : decodeURIComponent,\n          binData = decoder(parts.pop()),\n          mx = binData.length,\n          i = 0,\n          uiArr = new Uint8Array(mx);\n        for (i; i < mx; ++i) uiArr[i] = binData.charCodeAt(i);\n        return new myBlob([uiArr], {\n          type: type\n        });\n      }\n      function saver(url, winMode) {\n        if ('download' in anchor) {\n          //html5 A[download]\n          anchor.href = url;\n          anchor.setAttribute('download', fileName);\n          anchor.className = 'download-js-link';\n          anchor.innerHTML = 'downloading...';\n          anchor.style.display = 'none';\n          anchor.addEventListener('click', function (e) {\n            e.stopPropagation();\n            this.removeEventListener('click', arguments.callee);\n          });\n          document.body.appendChild(anchor);\n          setTimeout(function () {\n            anchor.click();\n            document.body.removeChild(anchor);\n            if (winMode === true) {\n              setTimeout(function () {\n                self.URL.revokeObjectURL(anchor.href);\n              }, 250);\n            }\n          }, 66);\n          return true;\n        }\n\n        // handle non-a[download] safari as best we can:\n        if (/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n          if (/^data:/.test(url)) url = 'data:' + url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n          if (!window.open(url)) {\n            // popup blocked, offer direct download:\n            if (confirm('Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.')) {\n              location.href = url;\n            }\n          }\n          return true;\n        }\n\n        //do iframe dataURL download (old ch+FF):\n        var f = document.createElement('iframe');\n        document.body.appendChild(f);\n        if (!winMode && /^data:/.test(url)) {\n          // force a mime that will download:\n          url = 'data:' + url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n        }\n        f.src = url;\n        setTimeout(function () {\n          document.body.removeChild(f);\n        }, 333);\n      } //end saver\n\n      if (navigator.msSaveBlob) {\n        // IE10+ : (has Blob, but not a[download] or URL)\n        return navigator.msSaveBlob(blob, fileName);\n      }\n      if (self.URL) {\n        // simple fast and modern way using Blob and URL:\n        saver(self.URL.createObjectURL(blob), true);\n      } else {\n        // handle non-Blob()+non-URL browsers:\n        if (typeof blob === 'string' || blob.constructor === toString) {\n          try {\n            return saver('data:' + mimeType + ';base64,' + self.btoa(blob));\n          } catch (y) {\n            return saver('data:' + mimeType + ',' + encodeURIComponent(blob));\n          }\n        }\n\n        // Blob but not URL support:\n        reader = new FileReader();\n        reader.onload = function (e) {\n          saver(this.result);\n        };\n        reader.readAsDataURL(blob);\n      }\n      return true;\n    }; /* end download() */\n  });\n})(download);\n\nvar gif = {};\n\n(function (c) {\n  function a(b, d) {\n    if ({}.hasOwnProperty.call(a.cache, b)) return a.cache[b];\n    var e = a.resolve(b);\n    if (!e) throw new Error('Failed to resolve module ' + b);\n    var c = {\n      id: b,\n      require: a,\n      filename: b,\n      exports: {},\n      loaded: !1,\n      parent: d,\n      children: []\n    };\n    d && d.children.push(c);\n    var f = b.slice(0, b.lastIndexOf('/') + 1);\n    return a.cache[b] = c.exports, e.call(c.exports, c, c.exports, f, b), c.loaded = !0, a.cache[b] = c.exports;\n  }\n  a.modules = {}, a.cache = {}, a.resolve = function (b) {\n    return {}.hasOwnProperty.call(a.modules, b) ? a.modules[b] : void 0;\n  }, a.define = function (b, c) {\n    a.modules[b] = c;\n  };\n  var b = function (a) {\n    return a = '/', {\n      title: 'browser',\n      version: 'v0.10.26',\n      browser: !0,\n      env: {},\n      argv: [],\n      nextTick: c.setImmediate || function (a) {\n        setTimeout(a, 0);\n      },\n      cwd: function () {\n        return a;\n      },\n      chdir: function (b) {\n        a = b;\n      }\n    };\n  }();\n  a.define('/gif.coffee', function (d, m, l, k) {\n    function g(a, b) {\n      return {}.hasOwnProperty.call(a, b);\n    }\n    function j(d, b) {\n      for (var a = 0, c = b.length; a < c; ++a) if (a in b && b[a] === d) return !0;\n      return !1;\n    }\n    function i(a, b) {\n      function d() {\n        this.constructor = a;\n      }\n      for (var c in b) g(b, c) && (a[c] = b[c]);\n      return d.prototype = b.prototype, a.prototype = new d(), a.__super__ = b.prototype, a;\n    }\n    var h, c, f, b, e;\n    f = a('events', d).EventEmitter, h = a('/browser.coffee', d), e = function (d) {\n      function a(d) {\n        var a, b;\n        this.running = !1, this.options = {}, this.frames = [], this.freeWorkers = [], this.activeWorkers = [], this.setOptions(d);\n        for (a in c) b = c[a], null != this.options[a] ? this.options[a] : this.options[a] = b;\n      }\n      return i(a, d), c = {\n        workerScript: 'gif.worker.js',\n        workers: 2,\n        repeat: 0,\n        background: '#fff',\n        quality: 10,\n        width: null,\n        height: null,\n        transparent: null\n      }, b = {\n        delay: 500,\n        copy: !1\n      }, a.prototype.setOption = function (a, b) {\n        return this.options[a] = b, null != this._canvas && (a === 'width' || a === 'height') ? this._canvas[a] = b : void 0;\n      }, a.prototype.setOptions = function (b) {\n        var a, c;\n        return function (d) {\n          for (a in b) {\n            if (!g(b, a)) continue;\n            c = b[a], d.push(this.setOption(a, c));\n          }\n          return d;\n        }.call(this, []);\n      }, a.prototype.addFrame = function (a, d) {\n        var c, e;\n        null == d && (d = {}), c = {}, c.transparent = this.options.transparent;\n        for (e in b) c[e] = d[e] || b[e];\n        if (null != this.options.width || this.setOption('width', a.width), null != this.options.height || this.setOption('height', a.height), 'undefined' !== typeof ImageData && null != ImageData && a instanceof ImageData) c.data = a.data;else if ('undefined' !== typeof CanvasRenderingContext2D && null != CanvasRenderingContext2D && a instanceof CanvasRenderingContext2D || 'undefined' !== typeof WebGLRenderingContext && null != WebGLRenderingContext && a instanceof WebGLRenderingContext) d.copy ? c.data = this.getContextData(a) : c.context = a;else if (null != a.childNodes) d.copy ? c.data = this.getImageData(a) : c.image = a;else throw new Error('Invalid image');\n        return this.frames.push(c);\n      }, a.prototype.render = function () {\n        var a;\n        if (this.running) throw new Error('Already running');\n        if (!(null != this.options.width && null != this.options.height)) throw new Error('Width and height must be set prior to rendering');\n        this.running = !0, this.nextFrame = 0, this.finishedFrames = 0, this.imageParts = function (c) {\n          for (var b = function () {\n              var b;\n              b = [];\n              for (var a = 0; 0 <= this.frames.length ? a < this.frames.length : a > this.frames.length; 0 <= this.frames.length ? ++a : --a) b.push(a);\n              return b;\n            }.apply(this, arguments), a = 0, e = b.length; a < e; ++a) b[a], c.push(null);\n          return c;\n        }.call(this, []), a = this.spawnWorkers();\n        for (var c = function () {\n            var c;\n            c = [];\n            for (var b = 0; 0 <= a ? b < a : b > a; 0 <= a ? ++b : --b) c.push(b);\n            return c;\n          }.apply(this, arguments), b = 0, e = c.length; b < e; ++b) c[b], this.renderNextFrame();\n        return this.emit('start'), this.emit('progress', 0);\n      }, a.prototype.abort = function () {\n        var a;\n        while (!0) {\n          if (a = this.activeWorkers.shift(), !(null != a)) break;\n          console.log('killing active worker'), a.terminate();\n        }\n        return this.running = !1, this.emit('abort');\n      }, a.prototype.spawnWorkers = function () {\n        var a;\n        return a = Math.min(this.options.workers, this.frames.length), function () {\n          var c;\n          c = [];\n          for (var b = this.freeWorkers.length; this.freeWorkers.length <= a ? b < a : b > a; this.freeWorkers.length <= a ? ++b : --b) c.push(b);\n          return c;\n        }.apply(this, arguments).forEach(function (a) {\n          return function (c) {\n            var b;\n            return console.log('spawning worker ' + c), b = new Worker(a.options.workerScript), b.onmessage = function (a) {\n              return function (c) {\n                return a.activeWorkers.splice(a.activeWorkers.indexOf(b), 1), a.freeWorkers.push(b), a.frameFinished(c.data);\n              };\n            }(a), a.freeWorkers.push(b);\n          };\n        }(this)), a;\n      }, a.prototype.frameFinished = function (a) {\n        return console.log('frame ' + a.index + ' finished - ' + this.activeWorkers.length + ' active'), this.finishedFrames++, this.emit('progress', this.finishedFrames / this.frames.length), this.imageParts[a.index] = a, j(null, this.imageParts) ? this.renderNextFrame() : this.finishRendering();\n      }, a.prototype.finishRendering = function () {\n        var e, a, k, m, b, d, h;\n        b = 0;\n        for (var f = 0, j = this.imageParts.length; f < j; ++f) a = this.imageParts[f], b += (a.data.length - 1) * a.pageSize + a.cursor;\n        b += a.pageSize - a.cursor, console.log('rendering finished - filesize ' + Math.round(b / 1e3) + 'kb'), e = new Uint8Array(b), d = 0;\n        for (var g = 0, l = this.imageParts.length; g < l; ++g) {\n          a = this.imageParts[g];\n          for (var c = 0, i = a.data.length; c < i; ++c) h = a.data[c], k = c, e.set(h, d), k === a.data.length - 1 ? d += a.cursor : d += a.pageSize;\n        }\n        return m = new Blob([e], {\n          type: 'image/gif'\n        }), this.emit('finished', m, e);\n      }, a.prototype.renderNextFrame = function () {\n        var c, a, b;\n        if (this.freeWorkers.length === 0) throw new Error('No free workers');\n        return this.nextFrame >= this.frames.length ? void 0 : (c = this.frames[this.nextFrame++], b = this.freeWorkers.shift(), a = this.getTask(c), console.log('starting frame ' + (a.index + 1) + ' of ' + this.frames.length), this.activeWorkers.push(b), b.postMessage(a));\n      }, a.prototype.getContextData = function (a) {\n        return a.getImageData(0, 0, this.options.width, this.options.height).data;\n      }, a.prototype.getImageData = function (b) {\n        var a;\n        return null != this._canvas || (this._canvas = document.createElement('canvas'), this._canvas.width = this.options.width, this._canvas.height = this.options.height), a = this._canvas.getContext('2d'), a.setFill = this.options.background, a.fillRect(0, 0, this.options.width, this.options.height), a.drawImage(b, 0, 0), this.getContextData(a);\n      }, a.prototype.getTask = function (a) {\n        var c, b;\n        if (c = this.frames.indexOf(a), b = {\n          index: c,\n          last: c === this.frames.length - 1,\n          delay: a.delay,\n          transparent: a.transparent,\n          width: this.options.width,\n          height: this.options.height,\n          quality: this.options.quality,\n          repeat: this.options.repeat,\n          canTransfer: h.name === 'chrome'\n        }, null != a.data) b.data = a.data;else if (null != a.context) b.data = this.getContextData(a.context);else if (null != a.image) b.data = this.getImageData(a.image);else throw new Error('Invalid frame');\n        return b;\n      }, a;\n    }(f), d.exports = e;\n  }), a.define('/browser.coffee', function (f, g, h, i) {\n    var a, d, e, c, b;\n    c = navigator.userAgent.toLowerCase(), e = navigator.platform.toLowerCase(), b = c.match(/(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/) || [null, 'unknown', 0], d = b[1] === 'ie' && document.documentMode, a = {\n      name: b[1] === 'version' ? b[3] : b[1],\n      version: d || parseFloat(b[1] === 'opera' && b[4] ? b[4] : b[2]),\n      platform: {\n        name: c.match(/ip(?:ad|od|hone)/) ? 'ios' : (c.match(/(?:webos|android)/) || e.match(/mac|win|linux/) || ['other'])[0]\n      }\n    }, a[a.name] = !0, a[a.name + parseInt(a.version, 10)] = !0, a.platform[a.platform.name] = !0, f.exports = a;\n  }), a.define('events', function (f, e, g, h) {\n    b.EventEmitter || (b.EventEmitter = function () {});\n    var a = e.EventEmitter = b.EventEmitter,\n      c = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n        return Object.prototype.toString.call(a) === '[object Array]';\n      },\n      d = 10;\n    a.prototype.setMaxListeners = function (a) {\n      this._events || (this._events = {}), this._events.maxListeners = a;\n    }, a.prototype.emit = function (f) {\n      if (f === 'error' && (!(this._events && this._events.error) || c(this._events.error) && !this._events.error.length)) throw arguments[1] instanceof Error ? arguments[1] : new Error(\"Uncaught, unspecified 'error' event.\");\n      if (!this._events) return !1;\n      var a = this._events[f];\n      if (!a) return !1;\n      if (!(typeof a == 'function')) if (c(a)) {\n        var b = Array.prototype.slice.call(arguments, 1),\n          e = a.slice();\n        for (var d = 0, g = e.length; d < g; d++) e[d].apply(this, b);\n        return !0;\n      } else return !1;\n      switch (arguments.length) {\n        case 1:\n          a.call(this);\n          break;\n        case 2:\n          a.call(this, arguments[1]);\n          break;\n        case 3:\n          a.call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          var b = Array.prototype.slice.call(arguments, 1);\n          a.apply(this, b);\n      }\n      return !0;\n    }, a.prototype.addListener = function (a, b) {\n      if ('function' !== typeof b) throw new Error('addListener only takes instances of Function');\n      if (this._events || (this._events = {}), this.emit('newListener', a, b), !this._events[a]) this._events[a] = b;else if (c(this._events[a])) {\n        if (!this._events[a].warned) {\n          var e;\n          this._events.maxListeners !== undefined ? e = this._events.maxListeners : e = d, e && e > 0 && this._events[a].length > e && (this._events[a].warned = !0, console.error('(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.', this._events[a].length), console.trace());\n        }\n        this._events[a].push(b);\n      } else this._events[a] = [this._events[a], b];\n      return this;\n    }, a.prototype.on = a.prototype.addListener, a.prototype.once = function (b, c) {\n      var a = this;\n      return a.on(b, function d() {\n        a.removeListener(b, d), c.apply(this, arguments);\n      }), this;\n    }, a.prototype.removeListener = function (a, d) {\n      if ('function' !== typeof d) throw new Error('removeListener only takes instances of Function');\n      if (!(this._events && this._events[a])) return this;\n      var b = this._events[a];\n      if (c(b)) {\n        var e = b.indexOf(d);\n        if (e < 0) return this;\n        b.splice(e, 1), b.length == 0 && delete this._events[a];\n      } else this._events[a] === d && delete this._events[a];\n      return this;\n    }, a.prototype.removeAllListeners = function (a) {\n      return a && this._events && this._events[a] && (this._events[a] = null), this;\n    }, a.prototype.listeners = function (a) {\n      return this._events || (this._events = {}), this._events[a] || (this._events[a] = []), c(this._events[a]) || (this._events[a] = [this._events[a]]), this._events[a];\n    };\n  }), c.GIF = a('/gif.coffee');\n}).call(commonjsGlobal, commonjsGlobal);\n\nvar webmWriter0_2_0 = {exports: {}};\n\n/**\n * A tool for presenting an ArrayBuffer as a stream for writing some simple data types.\n *\n * By Nicholas Sherlock\n *\n * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n */\n(function (module) {\n\n  (function () {\n    var isNodeEnviroment = 'object' !== 'undefined';\n    var isNodeEnviroment = false;\n\n    /**\n     * Create an ArrayBuffer of the given length and present it as a writable stream with methods\n     * for writing data in different formats.\n     */\n\n    var ArrayBufferDataStream = function (length) {\n      this.data = new Uint8Array(length);\n      this.pos = 0;\n    };\n    ArrayBufferDataStream.prototype.seek = function (offset) {\n      this.pos = offset;\n    };\n    ArrayBufferDataStream.prototype.writeBytes = function (arr) {\n      for (var i = 0; i < arr.length; i++) {\n        this.data[this.pos++] = arr[i];\n      }\n    };\n    ArrayBufferDataStream.prototype.writeByte = function (b) {\n      this.data[this.pos++] = b;\n    };\n\n    //Synonym:\n    ArrayBufferDataStream.prototype.writeU8 = ArrayBufferDataStream.prototype.writeByte;\n    ArrayBufferDataStream.prototype.writeU16BE = function (u) {\n      this.data[this.pos++] = u >> 8;\n      this.data[this.pos++] = u;\n    };\n    ArrayBufferDataStream.prototype.writeDoubleBE = function (d) {\n      var bytes = new Uint8Array(new Float64Array([d]).buffer);\n      for (var i = bytes.length - 1; i >= 0; i--) {\n        this.writeByte(bytes[i]);\n      }\n    };\n    ArrayBufferDataStream.prototype.writeFloatBE = function (d) {\n      var bytes = new Uint8Array(new Float32Array([d]).buffer);\n      for (var i = bytes.length - 1; i >= 0; i--) {\n        this.writeByte(bytes[i]);\n      }\n    };\n\n    /**\n     * Write an ASCII string to the stream\n     */\n    ArrayBufferDataStream.prototype.writeString = function (s) {\n      for (var i = 0; i < s.length; i++) {\n        this.data[this.pos++] = s.charCodeAt(i);\n      }\n    };\n\n    /**\n     * Write the given 32-bit integer to the stream as an EBML variable-length integer using the given byte width\n     * (use measureEBMLVarInt).\n     *\n     * No error checking is performed to ensure that the supplied width is correct for the integer.\n     *\n     * @param i Integer to be written\n     * @param width Number of bytes to write to the stream\n     */\n    ArrayBufferDataStream.prototype.writeEBMLVarIntWidth = function (i, width) {\n      switch (width) {\n        case 1:\n          this.writeU8(1 << 7 | i);\n          break;\n        case 2:\n          this.writeU8(1 << 6 | i >> 8);\n          this.writeU8(i);\n          break;\n        case 3:\n          this.writeU8(1 << 5 | i >> 16);\n          this.writeU8(i >> 8);\n          this.writeU8(i);\n          break;\n        case 4:\n          this.writeU8(1 << 4 | i >> 24);\n          this.writeU8(i >> 16);\n          this.writeU8(i >> 8);\n          this.writeU8(i);\n          break;\n        case 5:\n          /*\n           * JavaScript converts its doubles to 32-bit integers for bitwise operations, so we need to do a\n           * division by 2^32 instead of a right-shift of 32 to retain those top 3 bits\n           */\n          this.writeU8(1 << 3 | i / 4294967296 & 0x7);\n          this.writeU8(i >> 24);\n          this.writeU8(i >> 16);\n          this.writeU8(i >> 8);\n          this.writeU8(i);\n          break;\n        default:\n          throw new RuntimeException('Bad EBML VINT size ' + width);\n      }\n    };\n\n    /**\n     * Return the number of bytes needed to encode the given integer as an EBML VINT.\n     */\n    ArrayBufferDataStream.prototype.measureEBMLVarInt = function (val) {\n      if (val < (1 << 7) - 1) {\n        /* Top bit is set, leaving 7 bits to hold the integer, but we can't store 127 because\n         * \"all bits set to one\" is a reserved value. Same thing for the other cases below:\n         */\n        return 1;\n      } else if (val < (1 << 14) - 1) {\n        return 2;\n      } else if (val < (1 << 21) - 1) {\n        return 3;\n      } else if (val < (1 << 28) - 1) {\n        return 4;\n      } else if (val < 34359738367) {\n        // 2 ^ 35 - 1 (can address 32GB)\n        return 5;\n      } else {\n        throw new RuntimeException('EBML VINT size not supported ' + val);\n      }\n    };\n    ArrayBufferDataStream.prototype.writeEBMLVarInt = function (i) {\n      this.writeEBMLVarIntWidth(i, this.measureEBMLVarInt(i));\n    };\n\n    /**\n     * Write the given unsigned 32-bit integer to the stream in big-endian order using the given byte width.\n     * No error checking is performed to ensure that the supplied width is correct for the integer.\n     *\n     * Omit the width parameter to have it determined automatically for you.\n     *\n     * @param u Unsigned integer to be written\n     * @param width Number of bytes to write to the stream\n     */\n    ArrayBufferDataStream.prototype.writeUnsignedIntBE = function (u, width) {\n      if (width === undefined) {\n        width = this.measureUnsignedInt(u);\n      }\n\n      // Each case falls through:\n      switch (width) {\n        case 5:\n          this.writeU8(Math.floor(u / 4294967296));\n        // Need to use division to access >32 bits of floating point var\n        case 4:\n          this.writeU8(u >> 24);\n        case 3:\n          this.writeU8(u >> 16);\n        case 2:\n          this.writeU8(u >> 8);\n        case 1:\n          this.writeU8(u);\n          break;\n        default:\n          throw new RuntimeException('Bad UINT size ' + width);\n      }\n    };\n\n    /**\n     * Return the number of bytes needed to hold the non-zero bits of the given unsigned integer.\n     */\n    ArrayBufferDataStream.prototype.measureUnsignedInt = function (val) {\n      // Force to 32-bit unsigned integer\n      if (val < 1 << 8) {\n        return 1;\n      } else if (val < 1 << 16) {\n        return 2;\n      } else if (val < 1 << 24) {\n        return 3;\n      } else if (val < 4294967296) {\n        return 4;\n      } else {\n        return 5;\n      }\n    };\n\n    /**\n     * Return a view on the portion of the buffer from the beginning to the current seek position as a Uint8Array.\n     */\n    ArrayBufferDataStream.prototype.getAsDataArray = function () {\n      if (this.pos < this.data.byteLength) {\n        return this.data.subarray(0, this.pos);\n      } else if (this.pos == this.data.byteLength) {\n        return this.data;\n      } else {\n        throw \"ArrayBufferDataStream's pos lies beyond end of buffer\";\n      }\n    };\n    window.ArrayBufferDataStream = ArrayBufferDataStream;\n\n    /**\n     * Allows a series of Blob-convertible objects (ArrayBuffer, Blob, String, etc) to be added to a buffer. Seeking and\n     * overwriting of blobs is allowed.\n     *\n     * You can supply a FileWriter, in which case the BlobBuffer is just used as temporary storage before it writes it\n     * through to the disk.\n     *\n     * By Nicholas Sherlock\n     *\n     * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n     */\n\n    var BlobBuffer = function (fs) {\n      return function (destination) {\n        var buffer = [],\n          writePromise = Promise.resolve(),\n          fileWriter = null,\n          fd = null;\n        if (typeof FileWriter !== 'undefined' && destination instanceof FileWriter) {\n          fileWriter = destination;\n        } else if (fs && destination) {\n          fd = destination;\n        }\n\n        // Current seek offset\n        this.pos = 0;\n\n        // One more than the index of the highest byte ever written\n        this.length = 0;\n\n        // Returns a promise that converts the blob to an ArrayBuffer\n        function readBlobAsBuffer(blob) {\n          return new Promise(function (resolve, reject) {\n            var reader = new FileReader();\n            reader.addEventListener('loadend', function () {\n              resolve(reader.result);\n            });\n            reader.readAsArrayBuffer(blob);\n          });\n        }\n        function convertToUint8Array(thing) {\n          return new Promise(function (resolve, reject) {\n            if (thing instanceof Uint8Array) {\n              resolve(thing);\n            } else if (thing instanceof ArrayBuffer || ArrayBuffer.isView(thing)) {\n              resolve(new Uint8Array(thing));\n            } else if (thing instanceof Blob) {\n              resolve(readBlobAsBuffer(thing).then(function (buffer) {\n                return new Uint8Array(buffer);\n              }));\n            } else {\n              //Assume that Blob will know how to read this thing\n              resolve(readBlobAsBuffer(new Blob([thing])).then(function (buffer) {\n                return new Uint8Array(buffer);\n              }));\n            }\n          });\n        }\n        function measureData(data) {\n          var result = data.byteLength || data.length || data.size;\n          if (!Number.isInteger(result)) {\n            throw 'Failed to determine size of element';\n          }\n          return result;\n        }\n\n        /**\n         * Seek to the given absolute offset.\n         *\n         * You may not seek beyond the end of the file (this would create a hole and/or allow blocks to be written in non-\n         * sequential order, which isn't currently supported by the memory buffer backend).\n         */\n        this.seek = function (offset) {\n          if (offset < 0) {\n            throw 'Offset may not be negative';\n          }\n          if (isNaN(offset)) {\n            throw 'Offset may not be NaN';\n          }\n          if (offset > this.length) {\n            throw 'Seeking beyond the end of file is not allowed';\n          }\n          this.pos = offset;\n        };\n\n        /**\n         * Write the Blob-convertible data to the buffer at the current seek position.\n         *\n         * Note: If overwriting existing data, the write must not cross preexisting block boundaries (written data must\n         * be fully contained by the extent of a previous write).\n         */\n        this.write = function (data) {\n          var newEntry = {\n              offset: this.pos,\n              data: data,\n              length: measureData(data)\n            },\n            isAppend = newEntry.offset >= this.length;\n          this.pos += newEntry.length;\n          this.length = Math.max(this.length, this.pos);\n\n          // After previous writes complete, perform our write\n          writePromise = writePromise.then(function () {\n            if (fd) {\n              return new Promise(function (resolve, reject) {\n                convertToUint8Array(newEntry.data).then(function (dataArray) {\n                  var totalWritten = 0,\n                    buffer = Buffer.from(dataArray.buffer),\n                    handleWriteComplete = function (err, written, buffer) {\n                      totalWritten += written;\n                      if (totalWritten >= buffer.length) {\n                        resolve();\n                      } else {\n                        // We still have more to write...\n                        fs.write(fd, buffer, totalWritten, buffer.length - totalWritten, newEntry.offset + totalWritten, handleWriteComplete);\n                      }\n                    };\n                  fs.write(fd, buffer, 0, buffer.length, newEntry.offset, handleWriteComplete);\n                });\n              });\n            } else if (fileWriter) {\n              return new Promise(function (resolve, reject) {\n                fileWriter.onwriteend = resolve;\n                fileWriter.seek(newEntry.offset);\n                fileWriter.write(new Blob([newEntry.data]));\n              });\n            } else if (!isAppend) {\n              // We might be modifying a write that was already buffered in memory.\n\n              // Slow linear search to find a block we might be overwriting\n              for (var i = 0; i < buffer.length; i++) {\n                var entry = buffer[i];\n\n                // If our new entry overlaps the old one in any way...\n                if (!(newEntry.offset + newEntry.length <= entry.offset || newEntry.offset >= entry.offset + entry.length)) {\n                  if (newEntry.offset < entry.offset || newEntry.offset + newEntry.length > entry.offset + entry.length) {\n                    throw new Error('Overwrite crosses blob boundaries');\n                  }\n                  if (newEntry.offset == entry.offset && newEntry.length == entry.length) {\n                    // We overwrote the entire block\n                    entry.data = newEntry.data;\n\n                    // We're done\n                    return;\n                  } else {\n                    return convertToUint8Array(entry.data).then(function (entryArray) {\n                      entry.data = entryArray;\n                      return convertToUint8Array(newEntry.data);\n                    }).then(function (newEntryArray) {\n                      newEntry.data = newEntryArray;\n                      entry.data.set(newEntry.data, newEntry.offset - entry.offset);\n                    });\n                  }\n                }\n              }\n              // Else fall through to do a simple append, as we didn't overwrite any pre-existing blocks\n            }\n            buffer.push(newEntry);\n          });\n        };\n\n        /**\n         * Finish all writes to the buffer, returning a promise that signals when that is complete.\n         *\n         * If a FileWriter was not provided, the promise is resolved with a Blob that represents the completed BlobBuffer\n         * contents. You can optionally pass in a mimeType to be used for this blob.\n         *\n         * If a FileWriter was provided, the promise is resolved with null as the first argument.\n         */\n        this.complete = function (mimeType) {\n          if (fd || fileWriter) {\n            writePromise = writePromise.then(function () {\n              return null;\n            });\n          } else {\n            // After writes complete we need to merge the buffer to give to the caller\n            writePromise = writePromise.then(function () {\n              var result = [];\n              for (var i = 0; i < buffer.length; i++) {\n                result.push(buffer[i].data);\n              }\n              return new Blob(result, {\n                mimeType: mimeType\n              });\n            });\n          }\n          return writePromise;\n        };\n      };\n    }(isNodeEnviroment ? null : null);\n    window.BlobBuffer = BlobBuffer;\n\n    /**\n     * WebM video encoder for Google Chrome. This implementation is suitable for creating very large video files, because\n     * it can stream Blobs directly to a FileWriter without buffering the entire video in memory.\n     *\n     * When FileWriter is not available or not desired, it can buffer the video in memory as a series of Blobs which are\n     * eventually returned as one composite Blob.\n     *\n     * By Nicholas Sherlock.\n     *\n     * Based on the ideas from Whammy: https://github.com/antimatter15/whammy\n     *\n     * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n     */\n\n    var WebMWriter = function (ArrayBufferDataStream, BlobBuffer) {\n      function extend(base, top) {\n        var target = {};\n        [base, top].forEach(function (obj) {\n          for (var prop in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n              target[prop] = obj[prop];\n            }\n          }\n        });\n        return target;\n      }\n\n      /**\n       * Decode a Base64 data URL into a binary string.\n       *\n       * Returns the binary string, or false if the URL could not be decoded.\n       */\n      function decodeBase64WebPDataURL(url) {\n        if (typeof url !== 'string' || !url.match(/^data:image\\/webp;base64,/i)) {\n          return false;\n        }\n        return window.atob(url.substring('data:image/webp;base64,'.length));\n      }\n\n      /**\n       * Convert the given canvas to a WebP encoded image and return the image data as a string.\n       */\n      function renderAsWebP(canvas, quality) {\n        var frame = canvas.toDataURL('image/webp', {\n          quality: quality\n        });\n        return decodeBase64WebPDataURL(frame);\n      }\n      function extractKeyframeFromWebP(webP) {\n        // Assume that Chrome will generate a Simple Lossy WebP which has this header:\n        var keyframeStartIndex = webP.indexOf('VP8 ');\n        if (keyframeStartIndex == -1) {\n          throw 'Failed to identify beginning of keyframe in WebP image';\n        }\n\n        // Skip the header and the 4 bytes that encode the length of the VP8 chunk\n        keyframeStartIndex += 'VP8 '.length + 4;\n        return webP.substring(keyframeStartIndex);\n      }\n\n      // Just a little utility so we can tag values as floats for the EBML encoder's benefit\n      function EBMLFloat32(value) {\n        this.value = value;\n      }\n      function EBMLFloat64(value) {\n        this.value = value;\n      }\n\n      /**\n       * Write the given EBML object to the provided ArrayBufferStream.\n       *\n       * The buffer's first byte is at bufferFileOffset inside the video file. This is used to complete offset and\n       * dataOffset fields in each EBML structure, indicating the file offset of the first byte of the EBML element and\n       * its data payload.\n       */\n      function writeEBML(buffer, bufferFileOffset, ebml) {\n        // Is the ebml an array of sibling elements?\n        if (Array.isArray(ebml)) {\n          for (var i = 0; i < ebml.length; i++) {\n            writeEBML(buffer, bufferFileOffset, ebml[i]);\n          }\n          // Is this some sort of raw data that we want to write directly?\n        } else if (typeof ebml === 'string') {\n          buffer.writeString(ebml);\n        } else if (ebml instanceof Uint8Array) {\n          buffer.writeBytes(ebml);\n        } else if (ebml.id) {\n          // We're writing an EBML element\n          ebml.offset = buffer.pos + bufferFileOffset;\n          buffer.writeUnsignedIntBE(ebml.id); // ID field\n\n          // Now we need to write the size field, so we must know the payload size:\n\n          if (Array.isArray(ebml.data)) {\n            // Writing an array of child elements. We won't try to measure the size of the children up-front\n\n            var sizePos, dataBegin, dataEnd;\n            if (ebml.size === -1) {\n              // Write the reserved all-one-bits marker to note that the size of this element is unknown/unbounded\n              buffer.writeByte(0xff);\n            } else {\n              sizePos = buffer.pos;\n\n              /* Write a dummy size field to overwrite later. 4 bytes allows an element maximum size of 256MB,\n               * which should be plenty (we don't want to have to buffer that much data in memory at one time\n               * anyway!)\n               */\n              buffer.writeBytes([0, 0, 0, 0]);\n            }\n            dataBegin = buffer.pos;\n            ebml.dataOffset = dataBegin + bufferFileOffset;\n            writeEBML(buffer, bufferFileOffset, ebml.data);\n            if (ebml.size !== -1) {\n              dataEnd = buffer.pos;\n              ebml.size = dataEnd - dataBegin;\n              buffer.seek(sizePos);\n              buffer.writeEBMLVarIntWidth(ebml.size, 4); // Size field\n\n              buffer.seek(dataEnd);\n            }\n          } else if (typeof ebml.data === 'string') {\n            buffer.writeEBMLVarInt(ebml.data.length); // Size field\n            ebml.dataOffset = buffer.pos + bufferFileOffset;\n            buffer.writeString(ebml.data);\n          } else if (typeof ebml.data === 'number') {\n            // Allow the caller to explicitly choose the size if they wish by supplying a size field\n            if (!ebml.size) {\n              ebml.size = buffer.measureUnsignedInt(ebml.data);\n            }\n            buffer.writeEBMLVarInt(ebml.size); // Size field\n            ebml.dataOffset = buffer.pos + bufferFileOffset;\n            buffer.writeUnsignedIntBE(ebml.data, ebml.size);\n          } else if (ebml.data instanceof EBMLFloat64) {\n            buffer.writeEBMLVarInt(8); // Size field\n            ebml.dataOffset = buffer.pos + bufferFileOffset;\n            buffer.writeDoubleBE(ebml.data.value);\n          } else if (ebml.data instanceof EBMLFloat32) {\n            buffer.writeEBMLVarInt(4); // Size field\n            ebml.dataOffset = buffer.pos + bufferFileOffset;\n            buffer.writeFloatBE(ebml.data.value);\n          } else if (ebml.data instanceof Uint8Array) {\n            buffer.writeEBMLVarInt(ebml.data.byteLength); // Size field\n            ebml.dataOffset = buffer.pos + bufferFileOffset;\n            buffer.writeBytes(ebml.data);\n          } else {\n            throw 'Bad EBML datatype ' + typeof ebml.data;\n          }\n        } else {\n          throw 'Bad EBML datatype ' + typeof ebml.data;\n        }\n      }\n      return function (options) {\n        var MAX_CLUSTER_DURATION_MSEC = 5000,\n          DEFAULT_TRACK_NUMBER = 1,\n          writtenHeader = false,\n          videoWidth,\n          videoHeight,\n          clusterFrameBuffer = [],\n          clusterStartTime = 0,\n          clusterDuration = 0,\n          optionDefaults = {\n            quality: 0.95,\n            // WebM image quality from 0.0 (worst) to 1.0 (best)\n            fileWriter: null,\n            // Chrome FileWriter in order to stream to a file instead of buffering to memory (optional)\n            fd: null,\n            // Node.JS file descriptor to write to instead of buffering (optional)\n\n            // You must supply one of:\n            frameDuration: null,\n            // Duration of frames in milliseconds\n            frameRate: null // Number of frames per second\n          },\n          seekPoints = {\n            Cues: {\n              id: new Uint8Array([0x1c, 0x53, 0xbb, 0x6b]),\n              positionEBML: null\n            },\n            SegmentInfo: {\n              id: new Uint8Array([0x15, 0x49, 0xa9, 0x66]),\n              positionEBML: null\n            },\n            Tracks: {\n              id: new Uint8Array([0x16, 0x54, 0xae, 0x6b]),\n              positionEBML: null\n            }\n          },\n          ebmlSegment,\n          segmentDuration = {\n            id: 0x4489,\n            // Duration\n            data: new EBMLFloat64(0)\n          },\n          seekHead,\n          cues = [],\n          blobBuffer = new BlobBuffer(options.fileWriter || options.fd);\n        function fileOffsetToSegmentRelative(fileOffset) {\n          return fileOffset - ebmlSegment.dataOffset;\n        }\n\n        /**\n         * Create a SeekHead element with descriptors for the points in the global seekPoints array.\n         *\n         * 5 bytes of position values are reserved for each node, which lie at the offset point.positionEBML.dataOffset,\n         * to be overwritten later.\n         */\n        function createSeekHead() {\n          var seekPositionEBMLTemplate = {\n              id: 0x53ac,\n              // SeekPosition\n              size: 5,\n              // Allows for 32GB video files\n              data: 0 // We'll overwrite this when the file is complete\n            },\n            result = {\n              id: 0x114d9b74,\n              // SeekHead\n              data: []\n            };\n          for (var name in seekPoints) {\n            var seekPoint = seekPoints[name];\n            seekPoint.positionEBML = Object.create(seekPositionEBMLTemplate);\n            result.data.push({\n              id: 0x4dbb,\n              // Seek\n              data: [{\n                id: 0x53ab,\n                // SeekID\n                data: seekPoint.id\n              }, seekPoint.positionEBML]\n            });\n          }\n          return result;\n        }\n\n        /**\n         * Write the WebM file header to the stream.\n         */\n        function writeHeader() {\n          seekHead = createSeekHead();\n          var ebmlHeader = {\n              id: 0x1a45dfa3,\n              // EBML\n              data: [{\n                id: 0x4286,\n                // EBMLVersion\n                data: 1\n              }, {\n                id: 0x42f7,\n                // EBMLReadVersion\n                data: 1\n              }, {\n                id: 0x42f2,\n                // EBMLMaxIDLength\n                data: 4\n              }, {\n                id: 0x42f3,\n                // EBMLMaxSizeLength\n                data: 8\n              }, {\n                id: 0x4282,\n                // DocType\n                data: 'webm'\n              }, {\n                id: 0x4287,\n                // DocTypeVersion\n                data: 2\n              }, {\n                id: 0x4285,\n                // DocTypeReadVersion\n                data: 2\n              }]\n            },\n            segmentInfo = {\n              id: 0x1549a966,\n              // Info\n              data: [{\n                id: 0x2ad7b1,\n                // TimecodeScale\n                data: 1e6 // Times will be in miliseconds (1e6 nanoseconds per step = 1ms)\n              }, {\n                id: 0x4d80,\n                // MuxingApp\n                data: 'webm-writer-js'\n              }, {\n                id: 0x5741,\n                // WritingApp\n                data: 'webm-writer-js'\n              }, segmentDuration // To be filled in later\n              ]\n            },\n            tracks = {\n              id: 0x1654ae6b,\n              // Tracks\n              data: [{\n                id: 0xae,\n                // TrackEntry\n                data: [{\n                  id: 0xd7,\n                  // TrackNumber\n                  data: DEFAULT_TRACK_NUMBER\n                }, {\n                  id: 0x73c5,\n                  // TrackUID\n                  data: DEFAULT_TRACK_NUMBER\n                }, {\n                  id: 0x9c,\n                  // FlagLacing\n                  data: 0\n                }, {\n                  id: 0x22b59c,\n                  // Language\n                  data: 'und'\n                }, {\n                  id: 0x86,\n                  // CodecID\n                  data: 'V_VP8'\n                }, {\n                  id: 0x258688,\n                  // CodecName\n                  data: 'VP8'\n                }, {\n                  id: 0x83,\n                  // TrackType\n                  data: 1\n                }, {\n                  id: 0xe0,\n                  // Video\n                  data: [{\n                    id: 0xb0,\n                    // PixelWidth\n                    data: videoWidth\n                  }, {\n                    id: 0xba,\n                    // PixelHeight\n                    data: videoHeight\n                  }]\n                }]\n              }]\n            };\n          ebmlSegment = {\n            id: 0x18538067,\n            // Segment\n            size: -1,\n            // Unbounded size\n            data: [seekHead, segmentInfo, tracks]\n          };\n          var bufferStream = new ArrayBufferDataStream(256);\n          writeEBML(bufferStream, blobBuffer.pos, [ebmlHeader, ebmlSegment]);\n          blobBuffer.write(bufferStream.getAsDataArray());\n\n          // Now we know where these top-level elements lie in the file:\n          seekPoints.SegmentInfo.positionEBML.data = fileOffsetToSegmentRelative(segmentInfo.offset);\n          seekPoints.Tracks.positionEBML.data = fileOffsetToSegmentRelative(tracks.offset);\n        }\n\n        /**\n         * Create a SimpleBlock keyframe header using these fields:\n         *     timecode    - Time of this keyframe\n         *     trackNumber - Track number from 1 to 126 (inclusive)\n         *     frame       - Raw frame data payload string\n         *\n         * Returns an EBML element.\n         */\n        function createKeyframeBlock(keyframe) {\n          var bufferStream = new ArrayBufferDataStream(1 + 2 + 1);\n          if (!(keyframe.trackNumber > 0 && keyframe.trackNumber < 127)) {\n            throw 'TrackNumber must be > 0 and < 127';\n          }\n          bufferStream.writeEBMLVarInt(keyframe.trackNumber); // Always 1 byte since we limit the range of trackNumber\n          bufferStream.writeU16BE(keyframe.timecode);\n\n          // Flags byte\n          bufferStream.writeByte(1 << 7 // Keyframe\n          );\n          return {\n            id: 0xa3,\n            // SimpleBlock\n            data: [bufferStream.getAsDataArray(), keyframe.frame]\n          };\n        }\n\n        /**\n         * Create a Cluster node using these fields:\n         *\n         *    timecode    - Start time for the cluster\n         *\n         * Returns an EBML element.\n         */\n        function createCluster(cluster) {\n          return {\n            id: 0x1f43b675,\n            data: [{\n              id: 0xe7,\n              // Timecode\n              data: Math.round(cluster.timecode)\n            }]\n          };\n        }\n        function addCuePoint(trackIndex, clusterTime, clusterFileOffset) {\n          cues.push({\n            id: 0xbb,\n            // Cue\n            data: [{\n              id: 0xb3,\n              // CueTime\n              data: clusterTime\n            }, {\n              id: 0xb7,\n              // CueTrackPositions\n              data: [{\n                id: 0xf7,\n                // CueTrack\n                data: trackIndex\n              }, {\n                id: 0xf1,\n                // CueClusterPosition\n                data: fileOffsetToSegmentRelative(clusterFileOffset)\n              }]\n            }]\n          });\n        }\n\n        /**\n         * Write a Cues element to the blobStream using the global `cues` array of CuePoints (use addCuePoint()).\n         * The seek entry for the Cues in the SeekHead is updated.\n         */\n        function writeCues() {\n          var ebml = {\n              id: 0x1c53bb6b,\n              data: cues\n            },\n            cuesBuffer = new ArrayBufferDataStream(16 + cues.length * 32); // Pretty crude estimate of the buffer size we'll need\n\n          writeEBML(cuesBuffer, blobBuffer.pos, ebml);\n          blobBuffer.write(cuesBuffer.getAsDataArray());\n\n          // Now we know where the Cues element has ended up, we can update the SeekHead\n          seekPoints.Cues.positionEBML.data = fileOffsetToSegmentRelative(ebml.offset);\n        }\n\n        /**\n         * Flush the frames in the current clusterFrameBuffer out to the stream as a Cluster.\n         */\n        function flushClusterFrameBuffer() {\n          if (clusterFrameBuffer.length == 0) {\n            return;\n          }\n\n          // First work out how large of a buffer we need to hold the cluster data\n          var rawImageSize = 0;\n          for (var i = 0; i < clusterFrameBuffer.length; i++) {\n            rawImageSize += clusterFrameBuffer[i].frame.length;\n          }\n          var buffer = new ArrayBufferDataStream(rawImageSize + clusterFrameBuffer.length * 32),\n            // Estimate 32 bytes per SimpleBlock header\n            cluster = createCluster({\n              timecode: Math.round(clusterStartTime)\n            });\n          for (var i = 0; i < clusterFrameBuffer.length; i++) {\n            cluster.data.push(createKeyframeBlock(clusterFrameBuffer[i]));\n          }\n          writeEBML(buffer, blobBuffer.pos, cluster);\n          blobBuffer.write(buffer.getAsDataArray());\n          addCuePoint(DEFAULT_TRACK_NUMBER, Math.round(clusterStartTime), cluster.offset);\n          clusterFrameBuffer = [];\n          clusterStartTime += clusterDuration;\n          clusterDuration = 0;\n        }\n        function validateOptions() {\n          // Derive frameDuration setting if not already supplied\n          if (!options.frameDuration) {\n            if (options.frameRate) {\n              options.frameDuration = 1000 / options.frameRate;\n            } else {\n              throw 'Missing required frameDuration or frameRate setting';\n            }\n          }\n        }\n        function addFrameToCluster(frame) {\n          frame.trackNumber = DEFAULT_TRACK_NUMBER;\n\n          // Frame timecodes are relative to the start of their cluster:\n          frame.timecode = Math.round(clusterDuration);\n          clusterFrameBuffer.push(frame);\n          clusterDuration += frame.duration;\n          if (clusterDuration >= MAX_CLUSTER_DURATION_MSEC) {\n            flushClusterFrameBuffer();\n          }\n        }\n\n        /**\n         * Rewrites the SeekHead element that was initially written to the stream with the offsets of top level elements.\n         *\n         * Call once writing is complete (so the offset of all top level elements is known).\n         */\n        function rewriteSeekHead() {\n          var seekHeadBuffer = new ArrayBufferDataStream(seekHead.size),\n            oldPos = blobBuffer.pos;\n\n          // Write the rewritten SeekHead element's data payload to the stream (don't need to update the id or size)\n          writeEBML(seekHeadBuffer, seekHead.dataOffset, seekHead.data);\n\n          // And write that through to the file\n          blobBuffer.seek(seekHead.dataOffset);\n          blobBuffer.write(seekHeadBuffer.getAsDataArray());\n          blobBuffer.seek(oldPos);\n        }\n\n        /**\n         * Rewrite the Duration field of the Segment with the newly-discovered video duration.\n         */\n        function rewriteDuration() {\n          var buffer = new ArrayBufferDataStream(8),\n            oldPos = blobBuffer.pos;\n\n          // Rewrite the data payload (don't need to update the id or size)\n          buffer.writeDoubleBE(clusterStartTime);\n\n          // And write that through to the file\n          blobBuffer.seek(segmentDuration.dataOffset);\n          blobBuffer.write(buffer.getAsDataArray());\n          blobBuffer.seek(oldPos);\n        }\n\n        /**\n         * Add a frame to the video. Currently the frame must be a Canvas element.\n         */\n        this.addFrame = function (canvas) {\n          if (writtenHeader) {\n            if (canvas.width != videoWidth || canvas.height != videoHeight) {\n              throw 'Frame size differs from previous frames';\n            }\n          } else {\n            videoWidth = canvas.width;\n            videoHeight = canvas.height;\n            writeHeader();\n            writtenHeader = true;\n          }\n          var webP = renderAsWebP(canvas, {\n            quality: options.quality\n          });\n          if (!webP) {\n            throw \"Couldn't decode WebP frame, does the browser support WebP?\";\n          }\n          addFrameToCluster({\n            frame: extractKeyframeFromWebP(webP),\n            duration: options.frameDuration\n          });\n        };\n\n        /**\n         * Finish writing the video and return a Promise to signal completion.\n         *\n         * If the destination device was memory (i.e. options.fileWriter was not supplied), the Promise is resolved with\n         * a Blob with the contents of the entire video.\n         */\n        this.complete = function () {\n          flushClusterFrameBuffer();\n          writeCues();\n          rewriteSeekHead();\n          rewriteDuration();\n          return blobBuffer.complete('video/webm');\n        };\n        this.getWrittenSize = function () {\n          return blobBuffer.length;\n        };\n        options = extend(optionDefaults, options || {});\n        validateOptions();\n      };\n    };\n    if (isNodeEnviroment) {\n      module.exports = WebMWriter(ArrayBufferDataStream, BlobBuffer);\n    } else {\n      window.WebMWriter = WebMWriter(ArrayBufferDataStream, BlobBuffer);\n    }\n  })();\n})(webmWriter0_2_0);\n\n(function (module, exports) {\n  !function () {\n\n    var t = void 0 !== module.exports,\n      e = t ? tar.exports : window.Tar,\n      M = t ? download.exports : window.download,\n      i = t ? gif.GIF : window.GIF,\n      n = t ? webmWriter0_2_0.exports : window.WebMWriter,\n      o = {\n        function: !0,\n        object: !0\n      };\n    function r(t) {\n      return t && t.Object === Object ? t : null;\n    }\n    var a = exports && !exports.nodeType ? exports : void 0,\n      s = module && !module.nodeType ? module : void 0,\n      c = s && s.exports === a ? a : void 0,\n      h = r(a && s && 'object' == typeof commonjsGlobal && commonjsGlobal),\n      p = r(o[typeof self] && self),\n      m = r(o[typeof window] && window),\n      d = r(o[typeof this] && this),\n      u = h || m !== (d && d.window) && m || p || d || Function('return this')();\n    function l(t) {\n      return String('0000000' + t).slice(-7);\n    }\n    'gc' in window || (window.gc = function () {}), HTMLCanvasElement.prototype.toBlob || Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n      value: function (t, e, i) {\n        for (var n = atob(this.toDataURL(e, i).split(',')[1]), o = n.length, r = new Uint8Array(o), a = 0; a < o; a++) r[a] = n.charCodeAt(a);\n        t(new Blob([r], {\n          type: e || 'image/png'\n        }));\n      }\n    }), function () {\n      if ('performance' in window == 0 && (window.performance = {}), Date.now = Date.now || function () {\n        return new Date().getTime();\n      }, 'now' in window.performance == 0) {\n        var t = Date.now();\n        performance.timing && performance.timing.navigationStart && (t = performance.timing.navigationStart), window.performance.now = function () {\n          return Date.now() - t;\n        };\n      }\n    }();\n    var W = window.Date.now();\n    function f(t) {\n      var i = {};\n      this.settings = t, this.on = function (t, e) {\n        i[t] = e;\n      }, this.emit = function (t) {\n        var e = i[t];\n        e && e.apply(null, Array.prototype.slice.call(arguments, 1));\n      }, this.filename = t.name || function () {\n        function t() {\n          return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1);\n        }\n        return t() + t() + '-' + t() + '-' + t() + '-' + t() + '-' + t() + t() + t();\n      }(), this.extension = '', this.mimeType = '';\n    }\n    function w(t) {\n      f.call(this, t), this.extension = '.tar', this.mimeType = 'application/x-tar', this.fileExtension = '', this.baseFilename = this.filename, this.tape = null, this.count = 0, this.part = 1, this.frames = 0;\n    }\n    function z(t) {\n      w.call(this, t), this.type = 'image/png', this.fileExtension = '.png';\n    }\n    function U(t) {\n      w.call(this, t), this.type = 'image/jpeg', this.fileExtension = '.jpg', this.quality = t.quality / 100 || 0.8;\n    }\n    function _(t) {\n      'image/webp' !== document.createElement('canvas').toDataURL('image/webp').substr(5, 10) && console.log('WebP not supported - try another export format'), f.call(this, t), this.quality = t.quality / 100 || 0.8, this.extension = '.webm', this.mimeType = 'video/webm', this.baseFilename = this.filename, this.framerate = t.framerate, this.frames = 0, this.part = 1, this.videoWriter = new n({\n        quality: this.quality,\n        fileWriter: null,\n        fd: null,\n        frameRate: this.framerate\n      });\n    }\n    function H(t) {\n      f.call(this, t), t.quality = t.quality / 100 || 0.8, this.encoder = new FFMpegServer.Video(t), this.encoder.on('process', function () {\n        this.emit('process');\n      }.bind(this)), this.encoder.on('finished', function (t, e) {\n        var i = this.callback;\n        i && (this.callback = void 0, i(t, e));\n      }.bind(this)), this.encoder.on('progress', function (t) {\n        this.settings.onProgress && this.settings.onProgress(t);\n      }.bind(this)), this.encoder.on('error', function (t) {\n        alert(JSON.stringify(t, null, 2));\n      }.bind(this));\n    }\n    function V(t) {\n      f.call(this, t), this.framerate = this.settings.framerate, this.type = 'video/webm', this.extension = '.webm', this.stream = null, this.mediaRecorder = null, this.chunks = [];\n    }\n    function G(t) {\n      f.call(this, t), t.quality = 31 - (30 * t.quality / 100 || 10), t.workers = t.workers || 4, this.extension = '.gif', this.mimeType = 'image/gif', this.canvas = document.createElement('canvas'), this.ctx = this.canvas.getContext('2d'), this.sizeSet = !1, this.encoder = new i({\n        workers: t.workers,\n        quality: t.quality,\n        workerScript: t.workersPath + 'gif.worker.js'\n      }), this.encoder.on('progress', function (t) {\n        this.settings.onProgress && this.settings.onProgress(t);\n      }.bind(this)), this.encoder.on('finished', function (t) {\n        var e = this.callback;\n        e && (this.callback = void 0, e(t));\n      }.bind(this));\n    }\n    function y(t) {\n      var e,\n        n,\n        o,\n        r,\n        a,\n        i,\n        s,\n        c = t || {},\n        h = ([]),\n        p = [],\n        m = 0,\n        d = 0,\n        u = [],\n        l = !1,\n        f = {};\n      c.framerate = c.framerate || 60, c.motionBlurFrames = 2 * (c.motionBlurFrames || 1), e = c.verbose || !1, c.display, c.step = 1e3 / c.framerate, c.timeLimit = c.timeLimit || 0, c.frameLimit = c.frameLimit || 0, c.startTime = c.startTime || 0;\n      var w = document.createElement('div');\n      w.style.position = 'absolute', w.style.left = w.style.top = 0, w.style.backgroundColor = 'black', w.style.fontFamily = 'monospace', w.style.fontSize = '11px', w.style.padding = '5px', w.style.color = 'red', w.style.zIndex = 1e5, c.display && document.body.appendChild(w);\n      var y,\n        g,\n        v = document.createElement('canvas'),\n        b = v.getContext('2d');\n      P('Step is set to ' + c.step + 'ms');\n      var T = {\n          gif: G,\n          webm: _,\n          ffmpegserver: H,\n          png: z,\n          jpg: U,\n          'webm-mediarecorder': V\n        },\n        F = T[c.format];\n      if (!F) throw 'Error: Incorrect or missing format: Valid formats are ' + Object.keys(T).join(', ');\n      if ((s = new F(c)).step = i, s.on('process', R), s.on('progress', function (t) {\n        !function (t) {\n          var e = f[t];\n          e && e.apply(null, Array.prototype.slice.call(arguments, 1));\n        }('progress', t);\n      }), 'performance' in window == 0 && (window.performance = {}), Date.now = Date.now || function () {\n        return new Date().getTime();\n      }, 'now' in window.performance == 0) {\n        var x = Date.now();\n        performance.timing && performance.timing.navigationStart && (x = performance.timing.navigationStart), window.performance.now = function () {\n          return Date.now() - x;\n        };\n      }\n      var k = window.setTimeout,\n        S = window.setInterval,\n        D = window.clearInterval,\n        C = window.clearTimeout,\n        q = window.requestAnimationFrame,\n        j = window.Date.now,\n        I = window.performance.now,\n        O = window.Date.prototype.getTime,\n        B = [];\n      function E() {\n        l = !1, s.stop(), P('Capturer stop'), window.setTimeout = k, window.setInterval = S, window.clearInterval = D, window.clearTimeout = C, window.requestAnimationFrame = q, window.Date.prototype.getTime = O, window.Date.now = j, window.performance.now = I;\n      }\n      function L(t, e) {\n        k(t, 0, e);\n      }\n      function i() {\n        L(R);\n      }\n      function R() {\n        var t = 1e3 / c.framerate,\n          e = (m + d / c.motionBlurFrames) * t;\n        n = o + e, r = a + e, B.forEach(function (t) {\n          t._hookedTime = e / 1e3;\n        }), function () {\n          var t = m / c.framerate;\n          (c.frameLimit && m >= c.frameLimit || c.timeLimit && t >= c.timeLimit) && (E(), A());\n          var e = new Date(null);\n          e.setSeconds(t), 2 < c.motionBlurFrames ? w.textContent = 'CCapture ' + c.format + ' | ' + m + ' frames (' + d + ' inter) | ' + e.toISOString().substr(11, 8) : w.textContent = 'CCapture ' + c.format + ' | ' + m + ' frames | ' + e.toISOString().substr(11, 8);\n        }(), P('Frame: ' + m + ' ' + d);\n        for (var i = 0; i < h.length; i++) n >= h[i].triggerTime && (L(h[i].callback), h.splice(i, 1));\n        for (i = 0; i < p.length; i++) n >= p[i].triggerTime && (L(p[i].callback), p[i].triggerTime += p[i].time);\n        u.forEach(function (t) {\n          L(t, n - W);\n        }), u = [];\n      }\n      function A(t) {\n        t || (t = function (t) {\n          return M(t, s.filename + s.extension, s.mimeType), !1;\n        }), s.save(t);\n      }\n      function P(t) {\n        e && console.log(t);\n      }\n      return {\n        start: function () {\n          !function () {\n            function t() {\n              return this._hooked || (this._hooked = !0, this._hookedTime = this.currentTime || 0, this.pause(), B.push(this)), this._hookedTime + c.startTime;\n            }\n            P('Capturer start'), o = window.Date.now(), n = o + c.startTime, a = window.performance.now(), r = a + c.startTime, window.Date.prototype.getTime = function () {\n              return n;\n            }, window.Date.now = function () {\n              return n;\n            }, window.setTimeout = function (t, e) {\n              e = 5000000;\n              var i = {\n                callback: t,\n                time: e,\n                triggerTime: n + e\n              };\n              return h.push(i), P('Timeout set to ' + i.time), i;\n            }, window.clearTimeout = function (t) {\n              for (var e = 0; e < h.length; e++) h[e] != t || (h.splice(e, 1), P('Timeout cleared'));\n            }, window.setInterval = function (t, e) {\n              e = 5000000;\n              var i = {\n                callback: t,\n                time: e,\n                triggerTime: n + e\n              };\n              return p.push(i), P('Interval set to ' + i.time), i;\n            }, window.clearInterval = function (t) {\n              return P('clear Interval'), null;\n            }, window.requestAnimationFrame = function (t) {\n              u.push(t);\n            }, window.performance.now = function () {\n              return r;\n            };\n            try {\n              Object.defineProperty(HTMLVideoElement.prototype, 'currentTime', {\n                get: t\n              }), Object.defineProperty(HTMLAudioElement.prototype, 'currentTime', {\n                get: t\n              });\n            } catch (t) {\n              P(t);\n            }\n          }(), s.start(), l = !0;\n        },\n        capture: function (t) {\n          var e;\n          l && (2 < c.motionBlurFrames ? (e = t, v.width === e.width && v.height === e.height || (v.width = e.width, v.height = e.height, y = new Uint16Array(v.height * v.width * 4), b.fillStyle = '#0', b.fillRect(0, 0, v.width, v.height)), function (t) {\n            b.drawImage(t, 0, 0), g = b.getImageData(0, 0, v.width, v.height);\n            for (var e = 0; e < y.length; e += 4) y[e] += g.data[e], y[e + 1] += g.data[e + 1], y[e + 2] += g.data[e + 2];\n            d++;\n          }(t), d >= 0.5 * c.motionBlurFrames ? function () {\n            for (var t = g.data, e = 0; e < y.length; e += 4) t[e] = 2 * y[e] / c.motionBlurFrames, t[e + 1] = 2 * y[e + 1] / c.motionBlurFrames, t[e + 2] = 2 * y[e + 2] / c.motionBlurFrames;\n            for (b.putImageData(g, 0, 0), s.add(v), d = 0, P('Full MB Frame! ' + ++m + ' ' + n), e = 0; e < y.length; e += 4) y[e] = 0, y[e + 1] = 0, y[e + 2] = 0;\n            gc();\n          }() : i()) : (s.add(t), P('Full Frame! ' + ++m)));\n        },\n        stop: E,\n        save: A,\n        on: function (t, e) {\n          f[t] = e;\n        }\n      };\n    }\n    f.prototype.start = function () {}, f.prototype.stop = function () {}, f.prototype.add = function () {}, f.prototype.save = function () {}, f.prototype.dispose = function () {}, f.prototype.safeToProceed = function () {\n      return !0;\n    }, f.prototype.step = function () {\n      console.log('Step not set!');\n    }, (w.prototype = Object.create(f.prototype)).start = function () {\n      this.dispose();\n    }, w.prototype.add = function (t) {\n      var e = new FileReader();\n      e.onload = function () {\n        this.tape.append(l(this.count) + this.fileExtension, new Uint8Array(e.result)), 0 < this.settings.autoSaveTime && this.frames / this.settings.framerate >= this.settings.autoSaveTime ? this.save(function (t) {\n          this.filename = this.baseFilename + '-part-' + l(this.part), M(t, this.filename + this.extension, this.mimeType);\n          var e = this.count;\n          this.dispose(), this.count = e + 1, this.part++, this.filename = this.baseFilename + '-part-' + l(this.part), this.frames = 0, this.step();\n        }.bind(this)) : (this.count++, this.frames++, this.step());\n      }.bind(this), e.readAsArrayBuffer(t);\n    }, w.prototype.save = function (t) {\n      t(this.tape.save());\n    }, w.prototype.dispose = function () {\n      this.tape = new e(), this.count = 0;\n    }, (z.prototype = Object.create(w.prototype)).add = function (t) {\n      t.toBlob(function (t) {\n        w.prototype.add.call(this, t);\n      }.bind(this), this.type);\n    }, (U.prototype = Object.create(w.prototype)).add = function (t) {\n      t.toBlob(function (t) {\n        w.prototype.add.call(this, t);\n      }.bind(this), this.type, this.quality);\n    }, (_.prototype = Object.create(f.prototype)).start = function (t) {\n      this.dispose();\n    }, _.prototype.add = function (t) {\n      this.videoWriter.addFrame(t), 0 < this.settings.autoSaveTime && this.frames / this.settings.framerate >= this.settings.autoSaveTime ? this.save(function (t) {\n        this.filename = this.baseFilename + '-part-' + l(this.part), M(t, this.filename + this.extension, this.mimeType), this.dispose(), this.part++, this.filename = this.baseFilename + '-part-' + l(this.part), this.step();\n      }.bind(this)) : (this.frames++, this.step());\n    }, _.prototype.save = function (t) {\n      this.videoWriter.complete().then(t);\n    }, _.prototype.dispose = function (t) {\n      this.frames = 0, this.videoWriter = new n({\n        quality: this.quality,\n        fileWriter: null,\n        fd: null,\n        frameRate: this.framerate\n      });\n    }, (H.prototype = Object.create(f.prototype)).start = function () {\n      this.encoder.start(this.settings);\n    }, H.prototype.add = function (t) {\n      this.encoder.add(t);\n    }, H.prototype.save = function (t) {\n      this.callback = t, this.encoder.end();\n    }, H.prototype.safeToProceed = function () {\n      return this.encoder.safeToProceed();\n    }, (V.prototype = Object.create(f.prototype)).add = function (t) {\n      this.stream || (this.stream = t.captureStream(this.framerate), this.mediaRecorder = new MediaRecorder(this.stream), this.mediaRecorder.start(), this.mediaRecorder.ondataavailable = function (t) {\n        this.chunks.push(t.data);\n      }.bind(this)), this.step();\n    }, V.prototype.save = function (i) {\n      this.mediaRecorder.onstop = function (t) {\n        var e = new Blob(this.chunks, {\n          type: 'video/webm'\n        });\n        this.chunks = [], i(e);\n      }.bind(this), this.mediaRecorder.stop();\n    }, (G.prototype = Object.create(f.prototype)).add = function (t) {\n      this.sizeSet || (this.encoder.setOption('width', t.width), this.encoder.setOption('height', t.height), this.sizeSet = !0), this.canvas.width = t.width, this.canvas.height = t.height, this.ctx.drawImage(t, 0, 0), this.encoder.addFrame(this.ctx, {\n        copy: !0,\n        delay: this.settings.step\n      }), this.step();\n    }, G.prototype.save = function (t) {\n      this.callback = t, this.encoder.render();\n    }, (m || p || {}).CCapture = y, a && s ? (c && ((s.exports = y).CCapture = y), a.CCapture = y) : u.CCapture = y;\n  }();\n})(CCapture_min$2, CCapture_min$2.exports);\nvar CCapture_min = CCapture_min$2.exports;\n\nvar CCapture_min$1 = /*#__PURE__*/_mergeNamespaces({\n  __proto__: null,\n  'default': CCapture_min\n}, [CCapture_min$2.exports]);\n\nexport { CCapture_min$1 as C };\n//# sourceMappingURL=CCapture.min-3b6f0b97.js.map\n","var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nexport { commonjsGlobal as c };\n//# sourceMappingURL=_commonjsHelpers-1c8beb5f.js.map\n"],"names":["module","headerFormat","utils","ArrayBufferDataStream","BlobBuffer","exports","n","CCapture_min$2","tar","lookup","clean","length","i","buffer","Uint8Array","window","pad","num","bytes","base","toString","substr","extend","orig","addLength","multipleOf","parseInt","newSize","set","stringToUint8","input","out","offset","charCodeAt","uint8ToBase64","uint8","extraBytes","output","field","header","structure","format","data","cb","forEach","value","str","blockSize","Tar","recordsPerBlock","written","blocks","prototype","append","filepath","opts","callback","constructor","match","mode","mtime","Math","floor","Date","uid","gid","fileName","fileMode","fileSize","checksum","type","ustar","owner","group","Object","keys","key","headerArr","headerLength","ceil","inputLength","push","save","buffers","chunks","chunk","b","c","Blob","clear","download","_commonjsHelpers_1c8beb5f_js__WEBPACK_IMPORTED_MODULE_0__","strFileName","strMimeType","blob","reader","self","defaultMime","mimeType","payload","url","anchor","document","createElement","a","String","myBlob","MozBlob","WebKitBlob","call","bind","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","e","target","response","setTimeout","send","test","navigator","msSaveBlob","dataUrlToBlob","saver","tempUiArr","mx","strUrl","parts","binData","decoder","atob","decodeURIComponent","uiArr","winMode","setAttribute","className","innerHTML","style","display","addEventListener","stopPropagation","removeEventListener","arguments","callee","body","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","replace","confirm","location","f","src","createObjectURL","btoa","y","encodeURIComponent","FileReader","result","readAsDataURL","gif","d","hasOwnProperty","cache","resolve","id","require","filename","loaded","parent","children","slice","lastIndexOf","modules","define","title","version","browser","env","argv","nextTick","setImmediate","cwd","chdir","m","l","k","h","g","EventEmitter","running","options","frames","freeWorkers","activeWorkers","setOptions","__super__","workerScript","workers","repeat","background","quality","width","height","transparent","delay","copy","setOption","_canvas","addFrame","ImageData","CanvasRenderingContext2D","WebGLRenderingContext","getContextData","context","childNodes","getImageData","image","render","nextFrame","finishedFrames","imageParts","apply","spawnWorkers","renderNextFrame","emit","abort","shift","console","log","terminate","min","Worker","onmessage","splice","frameFinished","index","j","finishRendering","pageSize","cursor","round","getTask","postMessage","getContext","setFill","fillRect","drawImage","last","canTransfer","name","toLowerCase","platform","documentMode","parseFloat","Array","isArray","setMaxListeners","_events","maxListeners","error","Error","addListener","warned","undefined","trace","on","once","removeListener","removeAllListeners","listeners","GIF","webmWriter0_2_0","pos","seek","writeBytes","arr","writeByte","writeU8","writeU16BE","u","writeDoubleBE","Float64Array","writeFloatBE","Float32Array","writeString","s","writeEBMLVarIntWidth","RuntimeException","measureEBMLVarInt","val","writeEBMLVarInt","writeUnsignedIntBE","measureUnsignedInt","getAsDataArray","byteLength","subarray","destination","writePromise","Promise","fileWriter","readBlobAsBuffer","reject","readAsArrayBuffer","convertToUint8Array","thing","ArrayBuffer","isView","then","FileWriter","isNaN","write","newEntry","measureData","size","Number","isInteger","isAppend","max","onwriteend","entry","entryArray","newEntryArray","complete","WebMWriter","EBMLFloat32","EBMLFloat64","writeEBML","bufferFileOffset","ebml","sizePos","dataBegin","dataEnd","dataOffset","videoWidth","videoHeight","ebmlSegment","seekHead","writtenHeader","clusterFrameBuffer","clusterStartTime","clusterDuration","seekPoints","Cues","positionEBML","SegmentInfo","Tracks","segmentDuration","cues","blobBuffer","fd","fileOffsetToSegmentRelative","fileOffset","flushClusterFrameBuffer","clusterTime","clusterFileOffset","rawImageSize","frame","cluster","createKeyframeBlock","keyframe","bufferStream","trackNumber","timecode","canvas","createSeekHead","seekPositionEBMLTemplate","seekPoint","create","segmentInfo","tracks","webP","toDataURL","substring","extractKeyframeFromWebP","keyframeStartIndex","duration","frameDuration","cuesBuffer","seekHeadBuffer","oldPos","getWrittenSize","frameRate","obj","prop","validateOptions","t","M","o","function","object","r","nodeType","p","Function","gc","HTMLCanvasElement","toBlob","defineProperty","performance","now","getTime","timing","navigationStart","W","settings","random","extension","w","fileExtension","baseFilename","tape","count","part","z","U","_","framerate","videoWriter","H","encoder","FFMpegServer","Video","onProgress","alert","JSON","stringify","V","stream","mediaRecorder","G","ctx","sizeSet","workersPath","motionBlurFrames","verbose","step","timeLimit","frameLimit","startTime","position","left","top","backgroundColor","fontFamily","fontSize","padding","color","zIndex","v","P","T","webm","ffmpegserver","png","jpg","F","join","R","x","S","setInterval","D","clearInterval","C","clearTimeout","q","requestAnimationFrame","I","O","B","E","stop","_hookedTime","A","setSeconds","textContent","toISOString","triggerTime","L","time","start","_hooked","currentTime","pause","HTMLVideoElement","get","HTMLAudioElement","capture","Uint16Array","fillStyle","putImageData","add","dispose","safeToProceed","autoSaveTime","end","captureStream","MediaRecorder","ondataavailable","onstop","CCapture","CCapture_min$1","__proto__","getOwnPropertyDescriptor","enumerable","freeze","commonjsGlobal","globalThis","global"],"sourceRoot":""}